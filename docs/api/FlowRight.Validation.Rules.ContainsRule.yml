### YamlMime:ManagedReference
items:
- uid: FlowRight.Validation.Rules.ContainsRule
  commentId: T:FlowRight.Validation.Rules.ContainsRule
  id: ContainsRule
  parent: FlowRight.Validation.Rules
  children:
  - FlowRight.Validation.Rules.ContainsRule.#ctor(System.String,System.StringComparison)
  - FlowRight.Validation.Rules.ContainsRule.Validate(System.String,System.String)
  langs:
  - csharp
  - vb
  name: ContainsRule
  nameWithType: ContainsRule
  fullName: FlowRight.Validation.Rules.ContainsRule
  type: Class
  source:
    id: ContainsRule
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Rules/ContainsRule.cs
    startLine: 5
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Rules
  summary: A validation rule that ensures a string value contains a specified substring.
  example: []
  syntax:
    content: 'public sealed class ContainsRule : IRule<string>'
    content.vb: Public NotInheritable Class ContainsRule Implements IRule(Of String)
  inheritance:
  - System.Object
  implements:
  - FlowRight.Validation.Rules.IRule{System.String}
- uid: FlowRight.Validation.Rules.ContainsRule.#ctor(System.String,System.StringComparison)
  commentId: M:FlowRight.Validation.Rules.ContainsRule.#ctor(System.String,System.StringComparison)
  id: '#ctor(System.String,System.StringComparison)'
  parent: FlowRight.Validation.Rules.ContainsRule
  langs:
  - csharp
  - vb
  name: ContainsRule(string, StringComparison)
  nameWithType: ContainsRule.ContainsRule(string, StringComparison)
  fullName: FlowRight.Validation.Rules.ContainsRule.ContainsRule(string, System.StringComparison)
  type: Constructor
  source:
    id: .ctor
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Rules/ContainsRule.cs
    startLine: 21
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Rules
  summary: Initializes a new instance of the ContainsRule with the specified substring and comparison type.
  example: []
  syntax:
    content: public ContainsRule(string substring, StringComparison comparison = StringComparison.Ordinal)
    parameters:
    - id: substring
      type: System.String
      description: The substring that must be contained in the value.
    - id: comparison
      type: System.StringComparison
      description: The string comparison type to use.
    content.vb: Public Sub New(substring As String, comparison As StringComparison = StringComparison.Ordinal)
  overload: FlowRight.Validation.Rules.ContainsRule.#ctor*
  nameWithType.vb: ContainsRule.New(String, StringComparison)
  fullName.vb: FlowRight.Validation.Rules.ContainsRule.New(String, System.StringComparison)
  name.vb: New(String, StringComparison)
- uid: FlowRight.Validation.Rules.ContainsRule.Validate(System.String,System.String)
  commentId: M:FlowRight.Validation.Rules.ContainsRule.Validate(System.String,System.String)
  id: Validate(System.String,System.String)
  parent: FlowRight.Validation.Rules.ContainsRule
  langs:
  - csharp
  - vb
  name: Validate(string, string)
  nameWithType: ContainsRule.Validate(string, string)
  fullName: FlowRight.Validation.Rules.ContainsRule.Validate(string, string)
  type: Method
  source:
    id: Validate
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Rules/ContainsRule.cs
    startLine: 38
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Rules
  summary: Validates that the string value contains the specified substring.
  example: []
  syntax:
    content: public string? Validate(string value, string displayName)
    parameters:
    - id: value
      type: System.String
      description: The string value to validate.
    - id: displayName
      type: System.String
      description: The display name for the property being validated.
    return:
      type: System.String
      description: An error message if the value does not contain the substring; otherwise, null.
    content.vb: Public Function Validate(value As String, displayName As String) As String
  overload: FlowRight.Validation.Rules.ContainsRule.Validate*
  implements:
  - FlowRight.Validation.Rules.IRule{System.String}.Validate(System.String,System.String)
  nameWithType.vb: ContainsRule.Validate(String, String)
  fullName.vb: FlowRight.Validation.Rules.ContainsRule.Validate(String, String)
  name.vb: Validate(String, String)
references:
- uid: FlowRight.Validation.Rules
  commentId: N:FlowRight.Validation.Rules
  href: FlowRight.html
  name: FlowRight.Validation.Rules
  nameWithType: FlowRight.Validation.Rules
  fullName: FlowRight.Validation.Rules
  spec.csharp:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Rules
    name: Rules
    href: FlowRight.Validation.Rules.html
  spec.vb:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Rules
    name: Rules
    href: FlowRight.Validation.Rules.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FlowRight.Validation.Rules.IRule{System.String}
  commentId: T:FlowRight.Validation.Rules.IRule{System.String}
  parent: FlowRight.Validation.Rules
  definition: FlowRight.Validation.Rules.IRule`1
  href: FlowRight.Validation.Rules.IRule-1.html
  name: IRule<string>
  nameWithType: IRule<string>
  fullName: FlowRight.Validation.Rules.IRule<string>
  nameWithType.vb: IRule(Of String)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of String)
  name.vb: IRule(Of String)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FlowRight.Validation.Rules.IRule`1
  commentId: T:FlowRight.Validation.Rules.IRule`1
  href: FlowRight.Validation.Rules.IRule-1.html
  name: IRule<T>
  nameWithType: IRule<T>
  fullName: FlowRight.Validation.Rules.IRule<T>
  nameWithType.vb: IRule(Of T)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of T)
  name.vb: IRule(Of T)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FlowRight.Validation.Rules.ContainsRule.#ctor*
  commentId: Overload:FlowRight.Validation.Rules.ContainsRule.#ctor
  href: FlowRight.Validation.Rules.ContainsRule.html#FlowRight_Validation_Rules_ContainsRule__ctor_System_String_System_StringComparison_
  name: ContainsRule
  nameWithType: ContainsRule.ContainsRule
  fullName: FlowRight.Validation.Rules.ContainsRule.ContainsRule
  nameWithType.vb: ContainsRule.New
  fullName.vb: FlowRight.Validation.Rules.ContainsRule.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: FlowRight.Validation.Rules.ContainsRule.Validate*
  commentId: Overload:FlowRight.Validation.Rules.ContainsRule.Validate
  href: FlowRight.Validation.Rules.ContainsRule.html#FlowRight_Validation_Rules_ContainsRule_Validate_System_String_System_String_
  name: Validate
  nameWithType: ContainsRule.Validate
  fullName: FlowRight.Validation.Rules.ContainsRule.Validate
- uid: FlowRight.Validation.Rules.IRule{System.String}.Validate(System.String,System.String)
  commentId: M:FlowRight.Validation.Rules.IRule{System.String}.Validate(System.String,System.String)
  parent: FlowRight.Validation.Rules.IRule{System.String}
  definition: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  name: Validate(string, string)
  nameWithType: IRule<string>.Validate(string, string)
  fullName: FlowRight.Validation.Rules.IRule<string>.Validate(string, string)
  nameWithType.vb: IRule(Of String).Validate(String, String)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of String).Validate(String, String)
  name.vb: Validate(String, String)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule{System.String}.Validate(System.String,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule{System.String}.Validate(System.String,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  commentId: M:FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  isExternal: true
  href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  name: Validate(T, string)
  nameWithType: IRule<T>.Validate(T, string)
  fullName: FlowRight.Validation.Rules.IRule<T>.Validate(T, string)
  nameWithType.vb: IRule(Of T).Validate(T, String)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of T).Validate(T, String)
  name.vb: Validate(T, String)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
