### YamlMime:ManagedReference
items:
- uid: FlowRight.Core.Serialization.ResultJsonConverter
  commentId: T:FlowRight.Core.Serialization.ResultJsonConverter
  id: ResultJsonConverter
  parent: FlowRight.Core.Serialization
  children:
  - FlowRight.Core.Serialization.ResultJsonConverter.CanConvert(System.Type)
  - FlowRight.Core.Serialization.ResultJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  - FlowRight.Core.Serialization.ResultJsonConverter.Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
  langs:
  - csharp
  - vb
  name: ResultJsonConverter
  nameWithType: ResultJsonConverter
  fullName: FlowRight.Core.Serialization.ResultJsonConverter
  type: Class
  source:
    id: ResultJsonConverter
    path: /home/ringo/source/FlowRight-documentation/src/Core/Serialization/ResultJsonConverter.cs
    startLine: 41
  assemblies:
  - FlowRight.Core
  namespace: FlowRight.Core.Serialization
  summary: Provides custom JSON serialization and deserialization for <xref href="FlowRight.Core.Results.Result" data-throw-if-not-resolved="false"></xref> instances.
  remarks: >-
    <p>

    This converter ensures proper serialization of Result objects while maintaining immutability

    and supporting all failure types including validation failures, security exceptions, and

    operation cancellations. The converter handles both serialization and deserialization

    in a way that preserves the exact state of Result objects.

    </p>

    <p>

    The converter serializes Result objects as JSON objects with the following structure:

    <pre><code class="lang-csharp">{
      "error": "string",
      "failures": { "field": ["error1", "error2"] },
      "failureType": "None|Error|Security|Validation|OperationCanceled",
      "resultType": "Success|Information|Warning|Error"
    }</code></pre>

    </p>
  example:
  - >-
    <pre><code class="lang-csharp">// Register the converter globally

    JsonSerializerOptions options = new()

    {
        Converters = { new ResultJsonConverter() }
    };


    Result result = Result.Success();

    string json = JsonSerializer.Serialize(result, options);

    Result deserialized = JsonSerializer.Deserialize&lt;Result&gt;(json, options);</code></pre>
  syntax:
    content: 'public sealed class ResultJsonConverter : JsonConverter<Result>'
    content.vb: Public NotInheritable Class ResultJsonConverter Inherits JsonConverter(Of Result)
  inheritance:
  - System.Object
  - System.Text.Json.Serialization.JsonConverter
  - System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}
- uid: FlowRight.Core.Serialization.ResultJsonConverter.CanConvert(System.Type)
  commentId: M:FlowRight.Core.Serialization.ResultJsonConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: FlowRight.Core.Serialization.ResultJsonConverter
  langs:
  - csharp
  - vb
  name: CanConvert(Type)
  nameWithType: ResultJsonConverter.CanConvert(Type)
  fullName: FlowRight.Core.Serialization.ResultJsonConverter.CanConvert(System.Type)
  type: Method
  source:
    id: CanConvert
    path: /home/ringo/source/FlowRight-documentation/src/Core/Serialization/ResultJsonConverter.cs
    startLine: 48
  assemblies:
  - FlowRight.Core
  namespace: FlowRight.Core.Serialization
  summary: Gets a value indicating whether this converter can convert the specified type.
  example: []
  syntax:
    content: public override bool CanConvert(Type typeToConvert)
    parameters:
    - id: typeToConvert
      type: System.Type
      description: The type to check for conversion capability.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the type is <xref href="FlowRight.Core.Results.Result" data-throw-if-not-resolved="false"></xref> or can be handled by this converter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function CanConvert(typeToConvert As Type) As Boolean
  overridden: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.CanConvert(System.Type)
  overload: FlowRight.Core.Serialization.ResultJsonConverter.CanConvert*
- uid: FlowRight.Core.Serialization.ResultJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:FlowRight.Core.Serialization.ResultJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: FlowRight.Core.Serialization.ResultJsonConverter
  langs:
  - csharp
  - vb
  name: Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType: ResultJsonConverter.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: FlowRight.Core.Serialization.ResultJsonConverter.Read(ref System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  type: Method
  source:
    id: Read
    path: /home/ringo/source/FlowRight-documentation/src/Core/Serialization/ResultJsonConverter.cs
    startLine: 76
  assemblies:
  - FlowRight.Core
  namespace: FlowRight.Core.Serialization
  summary: Deserializes a JSON object into a <xref href="FlowRight.Core.Results.Result" data-throw-if-not-resolved="false"></xref> instance.
  remarks: >-
    <p>

    This method reconstructs Result objects from JSON by reading the serialized properties

    and using the appropriate static factory methods to create immutable Result instances.

    The method preserves the exact failure type and error information from the original object.

    </p>

    <p>

    The deserialization process handles all Result states:

    <ul><li>Success states with appropriate ResultType</li><li>General error failures</li><li>Security failures</li><li>Validation failures with field-specific errors</li><li>Operation cancellation failures</li></ul>

    </p>
  example: []
  syntax:
    content: public override Result Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    parameters:
    - id: reader
      type: System.Text.Json.Utf8JsonReader
      description: The JSON reader positioned at the start of the Result object.
    - id: typeToConvert
      type: System.Type
      description: The type to convert (should be <xref href="FlowRight.Core.Results.Result" data-throw-if-not-resolved="false"></xref>).
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON serializer options.
    return:
      type: FlowRight.Core.Results.Result
      description: A <xref href="FlowRight.Core.Results.Result" data-throw-if-not-resolved="false"></xref> instance representing the deserialized JSON data.
    content.vb: Public Overrides Function Read(reader As Utf8JsonReader, typeToConvert As Type, options As JsonSerializerOptions) As Result
  overridden: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  overload: FlowRight.Core.Serialization.ResultJsonConverter.Read*
  exceptions:
  - type: System.Text.Json.JsonException
    commentId: T:System.Text.Json.JsonException
    description: Thrown when the JSON structure is invalid or contains unexpected data.
  nameWithType.vb: ResultJsonConverter.Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName.vb: FlowRight.Core.Serialization.ResultJsonConverter.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Read(Utf8JsonReader, Type, JsonSerializerOptions)
- uid: FlowRight.Core.Serialization.ResultJsonConverter.Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
  commentId: M:FlowRight.Core.Serialization.ResultJsonConverter.Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
  id: Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
  parent: FlowRight.Core.Serialization.ResultJsonConverter
  langs:
  - csharp
  - vb
  name: Write(Utf8JsonWriter, Result, JsonSerializerOptions)
  nameWithType: ResultJsonConverter.Write(Utf8JsonWriter, Result, JsonSerializerOptions)
  fullName: FlowRight.Core.Serialization.ResultJsonConverter.Write(System.Text.Json.Utf8JsonWriter, FlowRight.Core.Results.Result, System.Text.Json.JsonSerializerOptions)
  type: Method
  source:
    id: Write
    path: /home/ringo/source/FlowRight-documentation/src/Core/Serialization/ResultJsonConverter.cs
    startLine: 187
  assemblies:
  - FlowRight.Core
  namespace: FlowRight.Core.Serialization
  summary: Serializes a <xref href="FlowRight.Core.Results.Result" data-throw-if-not-resolved="false"></xref> instance to JSON.
  remarks: >-
    <p>

    This method serializes Result objects to JSON by writing their properties as a JSON object.

    The serialization preserves all error information, failure types, and result states

    to enable complete round-trip serialization.

    </p>

    <p>

    The method writes the following JSON structure:

    <ul><li><code>error</code>: The error message string</li><li><code>failures</code>: Dictionary of field-specific validation errors</li><li><code>failureType</code>: The specific failure type enumeration</li><li><code>resultType</code>: The general result type enumeration</li></ul>

    </p>
  example: []
  syntax:
    content: public override void Write(Utf8JsonWriter writer, Result value, JsonSerializerOptions options)
    parameters:
    - id: writer
      type: System.Text.Json.Utf8JsonWriter
      description: The JSON writer to write the serialized data to.
    - id: value
      type: FlowRight.Core.Results.Result
      description: The <xref href="FlowRight.Core.Results.Result" data-throw-if-not-resolved="false"></xref> instance to serialize.
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON serializer options.
    content.vb: Public Overrides Sub Write(writer As Utf8JsonWriter, value As Result, options As JsonSerializerOptions)
  overridden: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
  overload: FlowRight.Core.Serialization.ResultJsonConverter.Write*
references:
- uid: FlowRight.Core.Results.Result
  commentId: T:FlowRight.Core.Results.Result
  parent: FlowRight.Core.Results
  href: FlowRight.Core.Results.Result.html
  name: Result
  nameWithType: Result
  fullName: FlowRight.Core.Results.Result
- uid: FlowRight.Core.Serialization
  commentId: N:FlowRight.Core.Serialization
  href: FlowRight.html
  name: FlowRight.Core.Serialization
  nameWithType: FlowRight.Core.Serialization
  fullName: FlowRight.Core.Serialization
  spec.csharp:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Core
    name: Core
    href: FlowRight.Core.html
  - name: .
  - uid: FlowRight.Core.Serialization
    name: Serialization
    href: FlowRight.Core.Serialization.html
  spec.vb:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Core
    name: Core
    href: FlowRight.Core.html
  - name: .
  - uid: FlowRight.Core.Serialization
    name: Serialization
    href: FlowRight.Core.Serialization.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Text.Json.Serialization.JsonConverter
  commentId: T:System.Text.Json.Serialization.JsonConverter
  parent: System.Text.Json.Serialization
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: System.Text.Json.Serialization.JsonConverter
- uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}
  commentId: T:System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}
  parent: System.Text.Json.Serialization
  definition: System.Text.Json.Serialization.JsonConverter`1
  href: FlowRight.Core.Results.Result.html
  name: JsonConverter<Result>
  nameWithType: JsonConverter<Result>
  fullName: System.Text.Json.Serialization.JsonConverter<FlowRight.Core.Results.Result>
  nameWithType.vb: JsonConverter(Of Result)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of FlowRight.Core.Results.Result)
  name.vb: JsonConverter(Of Result)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: <
  - uid: FlowRight.Core.Results.Result
    name: Result
    href: FlowRight.Core.Results.Result.html
  - name: '>'
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: FlowRight.Core.Results.Result
    name: Result
    href: FlowRight.Core.Results.Result.html
  - name: )
- uid: FlowRight.Core.Results
  commentId: N:FlowRight.Core.Results
  href: FlowRight.html
  name: FlowRight.Core.Results
  nameWithType: FlowRight.Core.Results
  fullName: FlowRight.Core.Results
  spec.csharp:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Core
    name: Core
    href: FlowRight.Core.html
  - name: .
  - uid: FlowRight.Core.Results
    name: Results
    href: FlowRight.Core.Results.html
  spec.vb:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Core
    name: Core
    href: FlowRight.Core.html
  - name: .
  - uid: FlowRight.Core.Results
    name: Results
    href: FlowRight.Core.Results.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.Json.Serialization
  commentId: N:System.Text.Json.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json.Serialization
  nameWithType: System.Text.Json.Serialization
  fullName: System.Text.Json.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  - name: .
  - uid: System.Text.Json.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  - name: .
  - uid: System.Text.Json.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.serialization
- uid: System.Text.Json.Serialization.JsonConverter`1
  commentId: T:System.Text.Json.Serialization.JsonConverter`1
  isExternal: true
  name: JsonConverter<T>
  nameWithType: JsonConverter<T>
  fullName: System.Text.Json.Serialization.JsonConverter<T>
  nameWithType.vb: JsonConverter(Of T)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T)
  name.vb: JsonConverter(Of T)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1
    name: JsonConverter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.CanConvert(System.Type)
  commentId: M:System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.CanConvert(System.Type)
  parent: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}
  definition: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
  name: CanConvert(Type)
  nameWithType: JsonConverter<Result>.CanConvert(Type)
  fullName: System.Text.Json.Serialization.JsonConverter<FlowRight.Core.Results.Result>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of Result).CanConvert(Type)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of FlowRight.Core.Results.Result).CanConvert(System.Type)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: FlowRight.Core.Serialization.ResultJsonConverter.CanConvert*
  commentId: Overload:FlowRight.Core.Serialization.ResultJsonConverter.CanConvert
  href: FlowRight.Core.Serialization.ResultJsonConverter.html#FlowRight_Core_Serialization_ResultJsonConverter_CanConvert_System_Type_
  name: CanConvert
  nameWithType: ResultJsonConverter.CanConvert
  fullName: FlowRight.Core.Serialization.ResultJsonConverter.CanConvert
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
  commentId: M:System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
  isExternal: true
  name: CanConvert(Type)
  nameWithType: JsonConverter<T>.CanConvert(Type)
  fullName: System.Text.Json.Serialization.JsonConverter<T>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of T).CanConvert(Type)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T).CanConvert(System.Type)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Text.Json.JsonException
  commentId: T:System.Text.Json.JsonException
  isExternal: true
  name: JsonException
  nameWithType: JsonException
  fullName: System.Text.Json.JsonException
- uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}
  definition: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  name: Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType: JsonConverter<Result>.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: System.Text.Json.Serialization.JsonConverter<FlowRight.Core.Results.Result>.Read(ref System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonConverter(Of Result).Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of FlowRight.Core.Results.Result).Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Read(Utf8JsonReader, Type, JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Read
    isExternal: true
  - name: (
  - name: ref
  - name: " "
  - uid: System.Text.Json.Utf8JsonReader
    name: Utf8JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Read
    isExternal: true
  - name: (
  - uid: System.Text.Json.Utf8JsonReader
    name: Utf8JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
  - name: )
- uid: FlowRight.Core.Serialization.ResultJsonConverter.Read*
  commentId: Overload:FlowRight.Core.Serialization.ResultJsonConverter.Read
  href: FlowRight.Core.Serialization.ResultJsonConverter.html#FlowRight_Core_Serialization_ResultJsonConverter_Read_System_Text_Json_Utf8JsonReader__System_Type_System_Text_Json_JsonSerializerOptions_
  name: Read
  nameWithType: ResultJsonConverter.Read
  fullName: FlowRight.Core.Serialization.ResultJsonConverter.Read
- uid: System.Text.Json.Utf8JsonReader
  commentId: T:System.Text.Json.Utf8JsonReader
  parent: System.Text.Json
  isExternal: true
  name: Utf8JsonReader
  nameWithType: Utf8JsonReader
  fullName: System.Text.Json.Utf8JsonReader
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  isExternal: true
  name: Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType: JsonConverter<T>.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: System.Text.Json.Serialization.JsonConverter<T>.Read(ref System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonConverter(Of T).Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T).Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Read(Utf8JsonReader, Type, JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Read
    isExternal: true
  - name: (
  - name: ref
  - name: " "
  - uid: System.Text.Json.Utf8JsonReader
    name: Utf8JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Read
    isExternal: true
  - name: (
  - uid: System.Text.Json.Utf8JsonReader
    name: Utf8JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
  - name: )
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}
  definition: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
  href: FlowRight.Core.Results.Result.html
  name: Write(Utf8JsonWriter, Result, JsonSerializerOptions)
  nameWithType: JsonConverter<Result>.Write(Utf8JsonWriter, Result, JsonSerializerOptions)
  fullName: System.Text.Json.Serialization.JsonConverter<FlowRight.Core.Results.Result>.Write(System.Text.Json.Utf8JsonWriter, FlowRight.Core.Results.Result, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonConverter(Of Result).Write(Utf8JsonWriter, Result, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of FlowRight.Core.Results.Result).Write(System.Text.Json.Utf8JsonWriter, FlowRight.Core.Results.Result, System.Text.Json.JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
    name: Write
    isExternal: true
  - name: (
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: FlowRight.Core.Results.Result
    name: Result
    href: FlowRight.Core.Results.Result.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter{FlowRight.Core.Results.Result}.Write(System.Text.Json.Utf8JsonWriter,FlowRight.Core.Results.Result,System.Text.Json.JsonSerializerOptions)
    name: Write
    isExternal: true
  - name: (
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: FlowRight.Core.Results.Result
    name: Result
    href: FlowRight.Core.Results.Result.html
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
  - name: )
- uid: FlowRight.Core.Serialization.ResultJsonConverter.Write*
  commentId: Overload:FlowRight.Core.Serialization.ResultJsonConverter.Write
  href: FlowRight.Core.Serialization.ResultJsonConverter.html#FlowRight_Core_Serialization_ResultJsonConverter_Write_System_Text_Json_Utf8JsonWriter_FlowRight_Core_Results_Result_System_Text_Json_JsonSerializerOptions_
  name: Write
  nameWithType: ResultJsonConverter.Write
  fullName: FlowRight.Core.Serialization.ResultJsonConverter.Write
- uid: System.Text.Json.Utf8JsonWriter
  commentId: T:System.Text.Json.Utf8JsonWriter
  parent: System.Text.Json
  isExternal: true
  name: Utf8JsonWriter
  nameWithType: Utf8JsonWriter
  fullName: System.Text.Json.Utf8JsonWriter
- uid: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
  isExternal: true
  name: Write(Utf8JsonWriter, T, JsonSerializerOptions)
  nameWithType: JsonConverter<T>.Write(Utf8JsonWriter, T, JsonSerializerOptions)
  fullName: System.Text.Json.Serialization.JsonConverter<T>.Write(System.Text.Json.Utf8JsonWriter, T, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonConverter(Of T).Write(Utf8JsonWriter, T, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T).Write(System.Text.Json.Utf8JsonWriter, T, System.Text.Json.JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
    name: Write
    isExternal: true
  - name: (
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
    name: Write
    isExternal: true
  - name: (
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    isExternal: true
  - name: )
