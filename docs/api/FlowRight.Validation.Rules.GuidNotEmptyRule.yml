### YamlMime:ManagedReference
items:
- uid: FlowRight.Validation.Rules.GuidNotEmptyRule
  commentId: T:FlowRight.Validation.Rules.GuidNotEmptyRule
  id: GuidNotEmptyRule
  parent: FlowRight.Validation.Rules
  children:
  - FlowRight.Validation.Rules.GuidNotEmptyRule.Validate(System.Nullable{System.Guid},System.String)
  langs:
  - csharp
  - vb
  name: GuidNotEmptyRule
  nameWithType: GuidNotEmptyRule
  fullName: FlowRight.Validation.Rules.GuidNotEmptyRule
  type: Class
  source:
    id: GuidNotEmptyRule
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Rules/GuidNotEmptyRule.cs
    startLine: 18
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Rules
  summary: >-
    Validation rule that ensures a GUID is not the empty GUID (00000000-0000-0000-0000-000000000000).

    This provides a more semantic alternative to NotEqual(Guid.Empty) for GUID-specific validation.
  example:
  - >-
    <pre><code class="lang-csharp">// Valid non-empty GUID

    rule.Validate(Guid.NewGuid(), "ID") // Returns null (valid)


    // Invalid empty GUID

    rule.Validate(Guid.Empty, "ID") // Returns "ID cannot be empty"


    // Null GUID

    rule.Validate(null, "ID") // Returns "ID cannot be empty"</code></pre>
  syntax:
    content: 'public sealed class GuidNotEmptyRule : IRule<Guid?>'
    content.vb: Public NotInheritable Class GuidNotEmptyRule Implements IRule(Of Guid?)
  inheritance:
  - System.Object
  implements:
  - FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}
- uid: FlowRight.Validation.Rules.GuidNotEmptyRule.Validate(System.Nullable{System.Guid},System.String)
  commentId: M:FlowRight.Validation.Rules.GuidNotEmptyRule.Validate(System.Nullable{System.Guid},System.String)
  id: Validate(System.Nullable{System.Guid},System.String)
  parent: FlowRight.Validation.Rules.GuidNotEmptyRule
  langs:
  - csharp
  - vb
  name: Validate(Guid?, string)
  nameWithType: GuidNotEmptyRule.Validate(Guid?, string)
  fullName: FlowRight.Validation.Rules.GuidNotEmptyRule.Validate(System.Guid?, string)
  type: Method
  source:
    id: Validate
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Rules/GuidNotEmptyRule.cs
    startLine: 23
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Rules
  summary: Validates the specified value and returns an error message if validation fails.
  example: []
  syntax:
    content: public string? Validate(Guid? value, string displayName)
    parameters:
    - id: value
      type: System.Nullable{System.Guid}
      description: The value to validate.
    - id: displayName
      type: System.String
      description: The display name for the property being validated, used in error messages.
    return:
      type: System.String
      description: An error message if validation fails; otherwise, null indicating validation passed.
    content.vb: Public Function Validate(value As Guid?, displayName As String) As String
  overload: FlowRight.Validation.Rules.GuidNotEmptyRule.Validate*
  implements:
  - FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}.Validate(System.Nullable{System.Guid},System.String)
  nameWithType.vb: GuidNotEmptyRule.Validate(Guid?, String)
  fullName.vb: FlowRight.Validation.Rules.GuidNotEmptyRule.Validate(System.Guid?, String)
  name.vb: Validate(Guid?, String)
references:
- uid: FlowRight.Validation.Rules
  commentId: N:FlowRight.Validation.Rules
  href: FlowRight.html
  name: FlowRight.Validation.Rules
  nameWithType: FlowRight.Validation.Rules
  fullName: FlowRight.Validation.Rules
  spec.csharp:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Rules
    name: Rules
    href: FlowRight.Validation.Rules.html
  spec.vb:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Rules
    name: Rules
    href: FlowRight.Validation.Rules.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}
  commentId: T:FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}
  parent: FlowRight.Validation.Rules
  definition: FlowRight.Validation.Rules.IRule`1
  href: FlowRight.Validation.Rules.IRule-1.html
  name: IRule<Guid?>
  nameWithType: IRule<Guid?>
  fullName: FlowRight.Validation.Rules.IRule<System.Guid?>
  nameWithType.vb: IRule(Of Guid?)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of System.Guid?)
  name.vb: IRule(Of Guid?)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: <
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FlowRight.Validation.Rules.IRule`1
  commentId: T:FlowRight.Validation.Rules.IRule`1
  href: FlowRight.Validation.Rules.IRule-1.html
  name: IRule<T>
  nameWithType: IRule<T>
  fullName: FlowRight.Validation.Rules.IRule<T>
  nameWithType.vb: IRule(Of T)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of T)
  name.vb: IRule(Of T)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FlowRight.Validation.Rules.GuidNotEmptyRule.Validate*
  commentId: Overload:FlowRight.Validation.Rules.GuidNotEmptyRule.Validate
  href: FlowRight.Validation.Rules.GuidNotEmptyRule.html#FlowRight_Validation_Rules_GuidNotEmptyRule_Validate_System_Nullable_System_Guid__System_String_
  name: Validate
  nameWithType: GuidNotEmptyRule.Validate
  fullName: FlowRight.Validation.Rules.GuidNotEmptyRule.Validate
- uid: FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}.Validate(System.Nullable{System.Guid},System.String)
  commentId: M:FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}.Validate(System.Nullable{System.Guid},System.String)
  parent: FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}
  definition: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  name: Validate(Guid?, string)
  nameWithType: IRule<Guid?>.Validate(Guid?, string)
  fullName: FlowRight.Validation.Rules.IRule<System.Guid?>.Validate(System.Guid?, string)
  nameWithType.vb: IRule(Of Guid?).Validate(Guid?, String)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of System.Guid?).Validate(System.Guid?, String)
  name.vb: Validate(Guid?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}.Validate(System.Nullable{System.Guid},System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule{System.Nullable{System.Guid}}.Validate(System.Nullable{System.Guid},System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  commentId: M:FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  isExternal: true
  href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  name: Validate(T, string)
  nameWithType: IRule<T>.Validate(T, string)
  fullName: FlowRight.Validation.Rules.IRule<T>.Validate(T, string)
  nameWithType.vb: IRule(Of T).Validate(T, String)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of T).Validate(T, String)
  name.vb: Validate(T, String)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
