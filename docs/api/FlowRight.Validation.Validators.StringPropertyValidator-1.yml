### YamlMime:ManagedReference
items:
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1
  commentId: T:FlowRight.Validation.Validators.StringPropertyValidator`1
  id: StringPropertyValidator`1
  parent: FlowRight.Validation.Validators
  children:
  - FlowRight.Validation.Validators.StringPropertyValidator`1.Alpha
  - FlowRight.Validation.Validators.StringPropertyValidator`1.AlphaNumeric
  - FlowRight.Validation.Validators.StringPropertyValidator`1.Contains(System.String,System.StringComparison)
  - FlowRight.Validation.Validators.StringPropertyValidator`1.EmailAddress
  - FlowRight.Validation.Validators.StringPropertyValidator`1.EndsWith(System.String,System.StringComparison)
  - FlowRight.Validation.Validators.StringPropertyValidator`1.ExactLength(System.Int32)
  - FlowRight.Validation.Validators.StringPropertyValidator`1.Length(System.Int32,System.Int32)
  - FlowRight.Validation.Validators.StringPropertyValidator`1.LowerCase
  - FlowRight.Validation.Validators.StringPropertyValidator`1.Matches(System.String,System.Text.RegularExpressions.RegexOptions)
  - FlowRight.Validation.Validators.StringPropertyValidator`1.MaximumLength(System.Int32)
  - FlowRight.Validation.Validators.StringPropertyValidator`1.MinimumLength(System.Int32)
  - FlowRight.Validation.Validators.StringPropertyValidator`1.StartsWith(System.String,System.StringComparison)
  - FlowRight.Validation.Validators.StringPropertyValidator`1.UpperCase
  - FlowRight.Validation.Validators.StringPropertyValidator`1.Url
  langs:
  - csharp
  - vb
  name: StringPropertyValidator<T>
  nameWithType: StringPropertyValidator<T>
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>
  type: Class
  source:
    id: StringPropertyValidator
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 27
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: >-
    Provides fluent validation rules specifically designed for string properties, offering comprehensive

    string-specific validation capabilities including length checks, pattern matching, and email validation.
  example:
  - >-
    <pre><code class="lang-csharp">ValidationBuilder&lt;User&gt; builder = new();

    builder.RuleFor(x =&gt; x.Email, request.Email)
        .NotEmpty()
        .EmailAddress()
        .MaximumLength(255)
        .WithMessage("Please provide a valid email address");

    builder.RuleFor(x =&gt; x.Password, request.Password)
        .NotEmpty()
        .MinimumLength(8)
        .Matches(@"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).*$")
        .WithMessage("Password must contain at least one lowercase, uppercase, and digit");</code></pre>
  syntax:
    content: 'public sealed class StringPropertyValidator<T> : PropertyValidator<T, string, StringPropertyValidator<T>>'
    typeParameters:
    - id: T
      description: The type of object being validated.
    content.vb: Public NotInheritable Class StringPropertyValidator(Of T) Inherits PropertyValidator(Of T, String, StringPropertyValidator(Of T))
  inheritance:
  - System.Object
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  inheritedMembers:
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Build(System.Func{{T}})
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Empty
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Equal(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Must(System.Func{System.String,System.Boolean},System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEmpty
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEqual(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotNull
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Null
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{{T},{TDifferentProp}}},FlowRight.Core.Results.Result{{TDifferentProp}},{TDifferentProp}@)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.String}},System.String,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Int32}},System.Int32,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Int64}},System.Int64,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Decimal}},System.Decimal,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Double}},System.Double,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Single}},System.Single,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Int16}},System.Int16,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.IEnumerable{{TItem}}}},System.Collections.Generic.IEnumerable{{TItem}},System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.DateTime}},System.DateTime,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Boolean,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Byte}},System.Byte,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.SByte}},System.SByte,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.UInt32}},System.UInt32,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.UInt64}},System.UInt64,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Char}},System.Char,System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Unless(System.Func{System.String,System.Boolean})
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.When(System.Func{System.String,System.Boolean})
  - FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.WithMessage(System.String)
  nameWithType.vb: StringPropertyValidator(Of T)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T)
  name.vb: StringPropertyValidator(Of T)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.EmailAddress
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.EmailAddress
  id: EmailAddress
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: EmailAddress()
  nameWithType: StringPropertyValidator<T>.EmailAddress()
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.EmailAddress()
  type: Method
  source:
    id: EmailAddress
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 60
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string is a properly formatted email address according to standard email format rules.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.Email, request.Email)
        .EmailAddress()
        .WithMessage("Please enter a valid email address");

    // Valid: "user@example.com", "test.email+tag@domain.co.uk"

    // Invalid: "invalid-email", "@domain.com", "user@"</code></pre>
  syntax:
    content: public StringPropertyValidator<T> EmailAddress()
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function EmailAddress() As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.EmailAddress*
  nameWithType.vb: StringPropertyValidator(Of T).EmailAddress()
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).EmailAddress()
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.ExactLength(System.Int32)
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.ExactLength(System.Int32)
  id: ExactLength(System.Int32)
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: ExactLength(int)
  nameWithType: StringPropertyValidator<T>.ExactLength(int)
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.ExactLength(int)
  type: Method
  source:
    id: ExactLength
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 78
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string has exactly the specified length.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.CountryCode, request.CountryCode)
        .ExactLength(2)
        .WithMessage("Country code must be exactly 2 characters");

    // Valid: "US", "CA", "GB"

    // Invalid: "USA", "C", ""</code></pre>
  syntax:
    content: public StringPropertyValidator<T> ExactLength(int length)
    parameters:
    - id: length
      type: System.Int32
      description: The exact length the string must have.
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function ExactLength(length As Integer) As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.ExactLength*
  nameWithType.vb: StringPropertyValidator(Of T).ExactLength(Integer)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).ExactLength(Integer)
  name.vb: ExactLength(Integer)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Length(System.Int32,System.Int32)
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.Length(System.Int32,System.Int32)
  id: Length(System.Int32,System.Int32)
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: Length(int, int)
  nameWithType: StringPropertyValidator<T>.Length(int, int)
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Length(int, int)
  type: Method
  source:
    id: Length
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 97
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string length is between the specified minimum and maximum values (inclusive).
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.Username, request.Username)
        .Length(3, 20)
        .WithMessage("Username must be between 3 and 20 characters");

    // Valid: "abc", "username123", "abcdefghijklmnopqrst"

    // Invalid: "ab", "verylongusernamethatexceedslimit"</code></pre>
  syntax:
    content: public StringPropertyValidator<T> Length(int minLength, int maxLength)
    parameters:
    - id: minLength
      type: System.Int32
      description: The minimum allowed length (inclusive).
    - id: maxLength
      type: System.Int32
      description: The maximum allowed length (inclusive).
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function Length(minLength As Integer, maxLength As Integer) As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.Length*
  nameWithType.vb: StringPropertyValidator(Of T).Length(Integer, Integer)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Length(Integer, Integer)
  name.vb: Length(Integer, Integer)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Matches(System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.Matches(System.String,System.Text.RegularExpressions.RegexOptions)
  id: Matches(System.String,System.Text.RegularExpressions.RegexOptions)
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: Matches(string, RegexOptions)
  nameWithType: StringPropertyValidator<T>.Matches(string, RegexOptions)
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Matches(string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    id: Matches
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 119
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string matches the specified regular expression pattern.
  example:
  - >-
    <pre><code class="lang-csharp">// Phone number validation

    builder.RuleFor(x =&gt; x.PhoneNumber, request.PhoneNumber)
        .Matches(@"^\+?[1-9]\d{1,14}$")
        .WithMessage("Please enter a valid phone number");

    // Case-insensitive pattern matching

    builder.RuleFor(x =&gt; x.ProductCode, request.ProductCode)
        .Matches(@"^[A-Z]{2}\d{4}$", RegexOptions.IgnoreCase)
        .WithMessage("Product code must be 2 letters followed by 4 digits");</code></pre>
  syntax:
    content: public StringPropertyValidator<T> Matches(string pattern, RegexOptions options = RegexOptions.None)
    parameters:
    - id: pattern
      type: System.String
      description: The regular expression pattern to match against.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: Optional regex options to modify pattern matching behavior.
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function Matches(pattern As String, options As RegexOptions = RegexOptions.None) As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.Matches*
  nameWithType.vb: StringPropertyValidator(Of T).Matches(String, RegexOptions)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Matches(String, System.Text.RegularExpressions.RegexOptions)
  name.vb: Matches(String, RegexOptions)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.MaximumLength(System.Int32)
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.MaximumLength(System.Int32)
  id: MaximumLength(System.Int32)
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: MaximumLength(int)
  nameWithType: StringPropertyValidator<T>.MaximumLength(int)
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.MaximumLength(int)
  type: Method
  source:
    id: MaximumLength
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 139
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string length does not exceed the specified maximum.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.Description, request.Description)
        .MaximumLength(500)
        .WithMessage("Description cannot exceed 500 characters");

    // Database field length constraints

    builder.RuleFor(x =&gt; x.Title, request.Title)
        .MaximumLength(100)
        .WithMessage("Title is too long for database storage");</code></pre>
  syntax:
    content: public StringPropertyValidator<T> MaximumLength(int max)
    parameters:
    - id: max
      type: System.Int32
      description: The maximum allowed length (inclusive).
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function MaximumLength(max As Integer) As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.MaximumLength*
  nameWithType.vb: StringPropertyValidator(Of T).MaximumLength(Integer)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).MaximumLength(Integer)
  name.vb: MaximumLength(Integer)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.MinimumLength(System.Int32)
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.MinimumLength(System.Int32)
  id: MinimumLength(System.Int32)
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: MinimumLength(int)
  nameWithType: StringPropertyValidator<T>.MinimumLength(int)
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.MinimumLength(int)
  type: Method
  source:
    id: MinimumLength
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 159
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string length meets or exceeds the specified minimum.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.Password, request.Password)
        .MinimumLength(8)
        .WithMessage("Password must be at least 8 characters long");

    // Security requirements

    builder.RuleFor(x =&gt; x.ApiKey, request.ApiKey)
        .MinimumLength(32)
        .WithMessage("API key is too short to be secure");</code></pre>
  syntax:
    content: public StringPropertyValidator<T> MinimumLength(int min)
    parameters:
    - id: min
      type: System.Int32
      description: The minimum required length (inclusive).
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function MinimumLength(min As Integer) As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.MinimumLength*
  nameWithType.vb: StringPropertyValidator(Of T).MinimumLength(Integer)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).MinimumLength(Integer)
  name.vb: MinimumLength(Integer)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Url
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.Url
  id: Url
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: Url()
  nameWithType: StringPropertyValidator<T>.Url()
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Url()
  type: Method
  source:
    id: Url
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 176
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string is a properly formatted URL according to standard URL format rules.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.Website, request.Website)
        .Url()
        .WithMessage("Please enter a valid URL");

    // Valid: "https://example.com", "http://www.test.org/path?query=1"

    // Invalid: "not-a-url", "ftp://example.com", "example.com"</code></pre>
  syntax:
    content: public StringPropertyValidator<T> Url()
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function Url() As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.Url*
  nameWithType.vb: StringPropertyValidator(Of T).Url()
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Url()
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Contains(System.String,System.StringComparison)
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.Contains(System.String,System.StringComparison)
  id: Contains(System.String,System.StringComparison)
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: Contains(string, StringComparison)
  nameWithType: StringPropertyValidator<T>.Contains(string, StringComparison)
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Contains(string, System.StringComparison)
  type: Method
  source:
    id: Contains
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 197
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string contains the specified substring.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.Description, request.Description)
        .Contains("important")
        .WithMessage("Description must contain the word 'important'");

    // Case-insensitive search

    builder.RuleFor(x =&gt; x.Title, request.Title)
        .Contains("urgent", StringComparison.OrdinalIgnoreCase)
        .WithMessage("Title must contain 'urgent' (case insensitive)");</code></pre>
  syntax:
    content: public StringPropertyValidator<T> Contains(string substring, StringComparison comparison = StringComparison.Ordinal)
    parameters:
    - id: substring
      type: System.String
      description: The substring that must be contained in the value.
    - id: comparison
      type: System.StringComparison
      description: The string comparison type to use.
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function Contains(substring As String, comparison As StringComparison = StringComparison.Ordinal) As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.Contains*
  nameWithType.vb: StringPropertyValidator(Of T).Contains(String, StringComparison)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Contains(String, System.StringComparison)
  name.vb: Contains(String, StringComparison)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.StartsWith(System.String,System.StringComparison)
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.StartsWith(System.String,System.StringComparison)
  id: StartsWith(System.String,System.StringComparison)
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: StartsWith(string, StringComparison)
  nameWithType: StringPropertyValidator<T>.StartsWith(string, StringComparison)
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.StartsWith(string, System.StringComparison)
  type: Method
  source:
    id: StartsWith
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 218
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string starts with the specified prefix.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.ProductCode, request.ProductCode)
        .StartsWith("PRD-")
        .WithMessage("Product code must start with 'PRD-'");

    // Case-insensitive prefix check

    builder.RuleFor(x =&gt; x.Command, request.Command)
        .StartsWith("exec", StringComparison.OrdinalIgnoreCase)
        .WithMessage("Command must start with 'exec'");</code></pre>
  syntax:
    content: public StringPropertyValidator<T> StartsWith(string prefix, StringComparison comparison = StringComparison.Ordinal)
    parameters:
    - id: prefix
      type: System.String
      description: The prefix that the value must start with.
    - id: comparison
      type: System.StringComparison
      description: The string comparison type to use.
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function StartsWith(prefix As String, comparison As StringComparison = StringComparison.Ordinal) As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.StartsWith*
  nameWithType.vb: StringPropertyValidator(Of T).StartsWith(String, StringComparison)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).StartsWith(String, System.StringComparison)
  name.vb: StartsWith(String, StringComparison)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.EndsWith(System.String,System.StringComparison)
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.EndsWith(System.String,System.StringComparison)
  id: EndsWith(System.String,System.StringComparison)
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: EndsWith(string, StringComparison)
  nameWithType: StringPropertyValidator<T>.EndsWith(string, StringComparison)
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.EndsWith(string, System.StringComparison)
  type: Method
  source:
    id: EndsWith
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 239
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string ends with the specified suffix.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.FileName, request.FileName)
        .EndsWith(".txt")
        .WithMessage("File must be a text file (.txt)");

    // Case-insensitive suffix check

    builder.RuleFor(x =&gt; x.ImagePath, request.ImagePath)
        .EndsWith(".jpg", StringComparison.OrdinalIgnoreCase)
        .WithMessage("Image must be a JPEG file");</code></pre>
  syntax:
    content: public StringPropertyValidator<T> EndsWith(string suffix, StringComparison comparison = StringComparison.Ordinal)
    parameters:
    - id: suffix
      type: System.String
      description: The suffix that the value must end with.
    - id: comparison
      type: System.StringComparison
      description: The string comparison type to use.
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function EndsWith(suffix As String, comparison As StringComparison = StringComparison.Ordinal) As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.EndsWith*
  nameWithType.vb: StringPropertyValidator(Of T).EndsWith(String, StringComparison)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).EndsWith(String, System.StringComparison)
  name.vb: EndsWith(String, StringComparison)
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Alpha
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.Alpha
  id: Alpha
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: Alpha()
  nameWithType: StringPropertyValidator<T>.Alpha()
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Alpha()
  type: Method
  source:
    id: Alpha
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 256
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string contains only alphabetic characters (letters).
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.FirstName, request.FirstName)
        .Alpha()
        .WithMessage("First name must contain only letters");

    // Valid: "John", "María", "José"

    // Invalid: "John123", "John-Doe", "John Smith"</code></pre>
  syntax:
    content: public StringPropertyValidator<T> Alpha()
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function Alpha() As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.Alpha*
  nameWithType.vb: StringPropertyValidator(Of T).Alpha()
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Alpha()
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.AlphaNumeric
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.AlphaNumeric
  id: AlphaNumeric
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: AlphaNumeric()
  nameWithType: StringPropertyValidator<T>.AlphaNumeric()
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.AlphaNumeric()
  type: Method
  source:
    id: AlphaNumeric
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 273
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string contains only alphanumeric characters (letters and digits).
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.Username, request.Username)
        .AlphaNumeric()
        .WithMessage("Username must contain only letters and numbers");

    // Valid: "User123", "JohnDoe", "admin"

    // Invalid: "user-123", "john_doe", "admin@"</code></pre>
  syntax:
    content: public StringPropertyValidator<T> AlphaNumeric()
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function AlphaNumeric() As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.AlphaNumeric*
  nameWithType.vb: StringPropertyValidator(Of T).AlphaNumeric()
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).AlphaNumeric()
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.UpperCase
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.UpperCase
  id: UpperCase
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: UpperCase()
  nameWithType: StringPropertyValidator<T>.UpperCase()
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.UpperCase()
  type: Method
  source:
    id: UpperCase
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 290
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string is in uppercase.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.CountryCode, request.CountryCode)
        .UpperCase()
        .WithMessage("Country code must be in uppercase");

    // Valid: "US", "CANADA", "UNITED KINGDOM"

    // Invalid: "us", "canada", "United Kingdom"</code></pre>
  syntax:
    content: public StringPropertyValidator<T> UpperCase()
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function UpperCase() As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.UpperCase*
  nameWithType.vb: StringPropertyValidator(Of T).UpperCase()
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).UpperCase()
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.LowerCase
  commentId: M:FlowRight.Validation.Validators.StringPropertyValidator`1.LowerCase
  id: LowerCase
  parent: FlowRight.Validation.Validators.StringPropertyValidator`1
  langs:
  - csharp
  - vb
  name: LowerCase()
  nameWithType: StringPropertyValidator<T>.LowerCase()
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.LowerCase()
  type: Method
  source:
    id: LowerCase
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Validators/StringPropertyValidator.cs
    startLine: 307
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Validators
  summary: Validates that the string is in lowercase.
  example:
  - >-
    <pre><code class="lang-csharp">builder.RuleFor(x =&gt; x.Username, request.Username)
        .LowerCase()
        .WithMessage("Username must be in lowercase");

    // Valid: "user", "admin", "john.doe"

    // Invalid: "User", "ADMIN", "John.Doe"</code></pre>
  syntax:
    content: public StringPropertyValidator<T> LowerCase()
    return:
      type: FlowRight.Validation.Validators.StringPropertyValidator`1
      description: The StringPropertyValidator&lt;T&gt; for method chaining.
    content.vb: Public Function LowerCase() As StringPropertyValidator(Of T)
  overload: FlowRight.Validation.Validators.StringPropertyValidator`1.LowerCase*
  nameWithType.vb: StringPropertyValidator(Of T).LowerCase()
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).LowerCase()
references:
- uid: FlowRight.Validation.Validators
  commentId: N:FlowRight.Validation.Validators
  href: FlowRight.html
  name: FlowRight.Validation.Validators
  nameWithType: FlowRight.Validation.Validators
  fullName: FlowRight.Validation.Validators
  spec.csharp:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Validators
    name: Validators
    href: FlowRight.Validation.Validators.html
  spec.vb:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Validators
    name: Validators
    href: FlowRight.Validation.Validators.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  commentId: T:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  parent: FlowRight.Validation.Validators
  definition: FlowRight.Validation.Validators.PropertyValidator`3
  href: FlowRight.Validation.Validators.PropertyValidator-3.html
  name: PropertyValidator<T, string, StringPropertyValidator<T>>
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T))
  name.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3
    name: PropertyValidator
    href: FlowRight.Validation.Validators.PropertyValidator-3.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: FlowRight.Validation.Validators.StringPropertyValidator`1
    name: StringPropertyValidator
    href: FlowRight.Validation.Validators.StringPropertyValidator-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3
    name: PropertyValidator
    href: FlowRight.Validation.Validators.PropertyValidator-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: FlowRight.Validation.Validators.StringPropertyValidator`1
    name: StringPropertyValidator
    href: FlowRight.Validation.Validators.StringPropertyValidator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Build(System.Func{{T}})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Build(System.Func{`0})
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.Build(System.Func{`0})
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Build_System_Func__0__
  name: Build(Func<T>)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.Build(Func<T>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.Build(System.Func<T>)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).Build(Func(Of T))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).Build(System.Func(Of T))
  name.vb: Build(Func(Of T))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Build(System.Func{`0})
    name: Build
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Build_System_Func__0__
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Build(System.Func{`0})
    name: Build
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Build_System_Func__0__
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Empty
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Empty
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.Empty
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Empty
  name: Empty()
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.Empty()
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.Empty()
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).Empty()
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).Empty()
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Empty
    name: Empty
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Empty
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Empty
    name: Empty
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Empty
  - name: (
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Equal(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Equal(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.Equal(`1,System.Collections.Generic.IEqualityComparer{`1})
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Equal__1_System_Collections_Generic_IEqualityComparer__1__
  name: Equal(string, IEqualityComparer<string>)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.Equal(string, IEqualityComparer<string>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.Equal(string, System.Collections.Generic.IEqualityComparer<string>)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).Equal(String, IEqualityComparer(Of String))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).Equal(String, System.Collections.Generic.IEqualityComparer(Of String))
  name.vb: Equal(String, IEqualityComparer(Of String))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Equal(System.String,System.Collections.Generic.IEqualityComparer{System.String})
    name: Equal
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Equal__1_System_Collections_Generic_IEqualityComparer__1__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Equal(System.String,System.Collections.Generic.IEqualityComparer{System.String})
    name: Equal
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Equal__1_System_Collections_Generic_IEqualityComparer__1__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Must(System.Func{System.String,System.Boolean},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Must(System.Func{System.String,System.Boolean},System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.Must(System.Func{`1,System.Boolean},System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Must_System_Func__1_System_Boolean__System_String_
  name: Must(Func<string, bool>, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.Must(Func<string, bool>, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.Must(System.Func<string, bool>, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).Must(Func(Of String, Boolean), String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).Must(System.Func(Of String, Boolean), String)
  name.vb: Must(Func(Of String, Boolean), String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Must(System.Func{System.String,System.Boolean},System.String)
    name: Must
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Must_System_Func__1_System_Boolean__System_String_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Must(System.Func{System.String,System.Boolean},System.String)
    name: Must
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Must_System_Func__1_System_Boolean__System_String_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEmpty
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEmpty
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.NotEmpty
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEmpty
  name: NotEmpty()
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.NotEmpty()
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.NotEmpty()
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).NotEmpty()
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).NotEmpty()
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEmpty
    name: NotEmpty
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEmpty
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEmpty
    name: NotEmpty
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEmpty
  - name: (
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEqual(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEqual(System.String,System.Collections.Generic.IEqualityComparer{System.String})
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.NotEqual(`1,System.Collections.Generic.IEqualityComparer{`1})
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEqual__1_System_Collections_Generic_IEqualityComparer__1__
  name: NotEqual(string, IEqualityComparer<string>)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.NotEqual(string, IEqualityComparer<string>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.NotEqual(string, System.Collections.Generic.IEqualityComparer<string>)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).NotEqual(String, IEqualityComparer(Of String))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).NotEqual(String, System.Collections.Generic.IEqualityComparer(Of String))
  name.vb: NotEqual(String, IEqualityComparer(Of String))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEqual(System.String,System.Collections.Generic.IEqualityComparer{System.String})
    name: NotEqual
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEqual__1_System_Collections_Generic_IEqualityComparer__1__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotEqual(System.String,System.Collections.Generic.IEqualityComparer{System.String})
    name: NotEqual
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEqual__1_System_Collections_Generic_IEqualityComparer__1__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotNull
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotNull
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.NotNull
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotNull
  name: NotNull()
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.NotNull()
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.NotNull()
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).NotNull()
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).NotNull()
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotNull
    name: NotNull
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotNull
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.NotNull
    name: NotNull
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotNull
  - name: (
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Null
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Null
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.Null
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Null
  name: Null()
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.Null()
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.Null()
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).Null()
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).Null()
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Null
    name: "Null"
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Null
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Null
    name: "Null"
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Null
  - name: (
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{{T},{TDifferentProp}}},FlowRight.Core.Results.Result{{TDifferentProp}},{TDifferentProp}@)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FlowRight.Core.Results.Result{``0},``0@)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FlowRight.Core.Results.Result{``0},``0@)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0___0___FlowRight_Core_Results_Result___0____0__
  name: RuleFor<TDifferentProp>(Expression<Func<T, TDifferentProp>>, Result<TDifferentProp>, out TDifferentProp)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor<TDifferentProp>(Expression<Func<T, TDifferentProp>>, Result<TDifferentProp>, out TDifferentProp)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor<TDifferentProp>(System.Linq.Expressions.Expression<System.Func<T, TDifferentProp>>, FlowRight.Core.Results.Result<TDifferentProp>, out TDifferentProp)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Of TDifferentProp)(Expression(Of Func(Of T, TDifferentProp)), Result(Of TDifferentProp), TDifferentProp)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(Of TDifferentProp)(System.Linq.Expressions.Expression(Of System.Func(Of T, TDifferentProp)), FlowRight.Core.Results.Result(Of TDifferentProp), TDifferentProp)
  name.vb: RuleFor(Of TDifferentProp)(Expression(Of Func(Of T, TDifferentProp)), Result(Of TDifferentProp), TDifferentProp)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FlowRight.Core.Results.Result{``0},``0@)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0___0___FlowRight_Core_Results_Result___0____0__
  - name: <
  - name: TDifferentProp
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TDifferentProp
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: FlowRight.Core.Results.Result`1
    name: Result
    href: FlowRight.Core.Results.Result-1.html
  - name: <
  - name: TDifferentProp
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TDifferentProp
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FlowRight.Core.Results.Result{``0},``0@)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0___0___FlowRight_Core_Results_Result___0____0__
  - name: (
  - name: Of
  - name: " "
  - name: TDifferentProp
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TDifferentProp
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: FlowRight.Core.Results.Result`1
    name: Result
    href: FlowRight.Core.Results.Result-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TDifferentProp
  - name: )
  - name: ','
  - name: " "
  - name: TDifferentProp
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.String}},System.String,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_String___System_String_System_String_
  name: RuleFor(Expression<Func<T, string>>, string, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, string>>, string, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, string>>, string, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, String)), String, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, String)), String, String)
  name.vb: RuleFor(Expression(Of Func(Of T, String)), String, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_String___System_String_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_String___System_String_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Guid____System_Nullable_System_Guid__System_String_
  name: RuleFor(Expression<Func<T, Guid?>>, Guid?, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, Guid?>>, Guid?, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, System.Guid?>>, System.Guid?, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Guid?)), Guid?, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Guid?)), System.Guid?, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Guid?)), Guid?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Guid____System_Nullable_System_Guid__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Guid____System_Nullable_System_Guid__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Int32}},System.Int32,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int32___System_Int32_System_String_
  name: RuleFor(Expression<Func<T, int>>, int, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, int>>, int, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, int>>, int, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Integer)), Integer, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Integer)), Integer, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Integer)), Integer, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int32___System_Int32_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int32___System_Int32_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Int64}},System.Int64,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int64___System_Int64_System_String_
  name: RuleFor(Expression<Func<T, long>>, long, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, long>>, long, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, long>>, long, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Long)), Long, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Long)), Long, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Long)), Long, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int64___System_Int64_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int64___System_Int64_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Decimal}},System.Decimal,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}},System.Decimal,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}},System.Decimal,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Decimal___System_Decimal_System_String_
  name: RuleFor(Expression<Func<T, decimal>>, decimal, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, decimal>>, decimal, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, decimal>>, decimal, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Decimal)), Decimal, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Decimal)), Decimal, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Decimal)), Decimal, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}},System.Decimal,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Decimal___System_Decimal_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: decimal
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: decimal
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}},System.Decimal,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Decimal___System_Decimal_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: Decimal
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: Decimal
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Double}},System.Double,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Double___System_Double_System_String_
  name: RuleFor(Expression<Func<T, double>>, double, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, double>>, double, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, double>>, double, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Double)), Double, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Double)), Double, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Double)), Double, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Double___System_Double_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Double___System_Double_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Single}},System.Single,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Single___System_Single_System_String_
  name: RuleFor(Expression<Func<T, float>>, float, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, float>>, float, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, float>>, float, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Single)), Single, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Single)), Single, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Single)), Single, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Single___System_Single_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Single___System_Single_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Int16}},System.Int16,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}},System.Int16,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}},System.Int16,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int16___System_Int16_System_String_
  name: RuleFor(Expression<Func<T, short>>, short, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, short>>, short, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, short>>, short, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Short)), Short, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Short)), Short, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Short)), Short, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}},System.Int16,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int16___System_Int16_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int16
    name: short
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int16
    name: short
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}},System.Int16,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int16___System_Int16_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int16
    name: Short
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int16
    name: Short
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.IEnumerable{{TItem}}}},System.Collections.Generic.IEnumerable{{TItem}},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEnumerable___0__System_String_
  name: RuleFor<TItem>(Expression<Func<T, IEnumerable<TItem>>>, IEnumerable<TItem>, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor<TItem>(Expression<Func<T, IEnumerable<TItem>>>, IEnumerable<TItem>, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor<TItem>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TItem>>>, System.Collections.Generic.IEnumerable<TItem>, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Of TItem)(Expression(Of Func(Of T, IEnumerable(Of TItem))), IEnumerable(Of TItem), String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(Of TItem)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TItem))), System.Collections.Generic.IEnumerable(Of TItem), String)
  name.vb: RuleFor(Of TItem)(Expression(Of Func(Of T, IEnumerable(Of TItem))), IEnumerable(Of TItem), String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEnumerable___0__System_String_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEnumerable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.DateTime}},System.DateTime,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}},System.DateTime,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}},System.DateTime,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_DateTime___System_DateTime_System_String_
  name: RuleFor(Expression<Func<T, DateTime>>, DateTime, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, DateTime>>, DateTime, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, System.DateTime>>, System.DateTime, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Date)), Date, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Date)), Date, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Date)), Date, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}},System.DateTime,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_DateTime___System_DateTime_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}},System.DateTime,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_DateTime___System_DateTime_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_DateTime____System_Nullable_System_DateTime__System_String_
  name: RuleFor(Expression<Func<T, DateTime?>>, DateTime?, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, DateTime?>>, DateTime?, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, System.DateTime?>>, System.DateTime?, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Date?)), Date?, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Date?)), Date?, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Date?)), Date?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_DateTime____System_Nullable_System_DateTime__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: '?'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_DateTime____System_Nullable_System_DateTime__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: '?'
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Boolean,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_String_
  name: RuleFor(Expression<Func<T, bool>>, bool, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, bool>>, bool, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, bool>>, bool, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Boolean)), Boolean, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Boolean, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Boolean)), Boolean, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Boolean____System_Nullable_System_Boolean__System_String_
  name: RuleFor(Expression<Func<T, bool?>>, bool?, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, bool?>>, bool?, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, bool?>>, bool?, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Boolean?)), Boolean?, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean?)), Boolean?, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Boolean?)), Boolean?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Boolean____System_Nullable_System_Boolean__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '?'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Boolean____System_Nullable_System_Boolean__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: '?'
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Byte}},System.Byte,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Byte}},System.Byte,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Byte}},System.Byte,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Byte___System_Byte_System_String_
  name: RuleFor(Expression<Func<T, byte>>, byte, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, byte>>, byte, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, byte>>, byte, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Byte)), Byte, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Byte)), Byte, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Byte)), Byte, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Byte}},System.Byte,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Byte___System_Byte_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Byte}},System.Byte,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Byte___System_Byte_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.SByte}},System.SByte,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.SByte}},System.SByte,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.SByte}},System.SByte,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_SByte___System_SByte_System_String_
  name: RuleFor(Expression<Func<T, sbyte>>, sbyte, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, sbyte>>, sbyte, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, sbyte>>, sbyte, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, SByte)), SByte, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, SByte)), SByte, String)
  name.vb: RuleFor(Expression(Of Func(Of T, SByte)), SByte, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.SByte}},System.SByte,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_SByte___System_SByte_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.SByte
    name: sbyte
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.SByte
    name: sbyte
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.SByte}},System.SByte,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_SByte___System_SByte_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.SByte
    name: SByte
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.SByte
    name: SByte
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.UInt32}},System.UInt32,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt32___System_UInt32_System_String_
  name: RuleFor(Expression<Func<T, uint>>, uint, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, uint>>, uint, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, uint>>, uint, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, UInteger)), UInteger, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, UInteger)), UInteger, String)
  name.vb: RuleFor(Expression(Of Func(Of T, UInteger)), UInteger, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt32___System_UInt32_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt32___System_UInt32_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.UInt64}},System.UInt64,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt64___System_UInt64_System_String_
  name: RuleFor(Expression<Func<T, ulong>>, ulong, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, ulong>>, ulong, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, ulong>>, ulong, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, ULong)), ULong, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, ULong)), ULong, String)
  name.vb: RuleFor(Expression(Of Func(Of T, ULong)), ULong, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt64___System_UInt64_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt64___System_UInt64_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Char}},System.Char,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Char}},System.Char,System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Char}},System.Char,System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Char___System_Char_System_String_
  name: RuleFor(Expression<Func<T, char>>, char, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, char>>, char, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, char>>, char, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Char)), Char, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Char)), Char, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Char)), Char, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Char}},System.Char,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Char___System_Char_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Char}},System.Char,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Char___System_Char_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{{T},System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Char____System_Nullable_System_Char__System_String_
  name: RuleFor(Expression<Func<T, char?>>, char?, string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.RuleFor(Expression<Func<T, char?>>, char?, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, char?>>, char?, string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).RuleFor(Expression(Of Func(Of T, Char?)), Char?, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Char?)), Char?, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Char?)), Char?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Char____System_Nullable_System_Char__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
  - name: '?'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Char____System_Nullable_System_Char__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
  - name: '?'
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Unless(System.Func{System.String,System.Boolean})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Unless(System.Func{System.String,System.Boolean})
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.Unless(System.Func{`1,System.Boolean})
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Unless_System_Func__1_System_Boolean__
  name: Unless(Func<string, bool>)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.Unless(Func<string, bool>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.Unless(System.Func<string, bool>)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).Unless(Func(Of String, Boolean))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).Unless(System.Func(Of String, Boolean))
  name.vb: Unless(Func(Of String, Boolean))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Unless(System.Func{System.String,System.Boolean})
    name: Unless
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Unless_System_Func__1_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.Unless(System.Func{System.String,System.Boolean})
    name: Unless
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Unless_System_Func__1_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.When(System.Func{System.String,System.Boolean})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.When(System.Func{System.String,System.Boolean})
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.When(System.Func{`1,System.Boolean})
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_When_System_Func__1_System_Boolean__
  name: When(Func<string, bool>)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.When(Func<string, bool>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.When(System.Func<string, bool>)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).When(Func(Of String, Boolean))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).When(System.Func(Of String, Boolean))
  name.vb: When(Func(Of String, Boolean))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.When(System.Func{System.String,System.Boolean})
    name: When
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_When_System_Func__1_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.When(System.Func{System.String,System.Boolean})
    name: When
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_When_System_Func__1_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.WithMessage(System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.WithMessage(System.String)
  parent: FlowRight.Validation.Validators.PropertyValidator{{T},System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}
  definition: FlowRight.Validation.Validators.PropertyValidator`3.WithMessage(System.String)
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_WithMessage_System_String_
  name: WithMessage(string)
  nameWithType: PropertyValidator<T, string, StringPropertyValidator<T>>.WithMessage(string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, string, FlowRight.Validation.Validators.StringPropertyValidator<T>>.WithMessage(string)
  nameWithType.vb: PropertyValidator(Of T, String, StringPropertyValidator(Of T)).WithMessage(String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, String, FlowRight.Validation.Validators.StringPropertyValidator(Of T)).WithMessage(String)
  name.vb: WithMessage(String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.WithMessage(System.String)
    name: WithMessage
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_WithMessage_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator{`0,System.String,FlowRight.Validation.Validators.StringPropertyValidator`1}.WithMessage(System.String)
    name: WithMessage
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_WithMessage_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FlowRight.Validation.Validators.PropertyValidator`3
  commentId: T:FlowRight.Validation.Validators.PropertyValidator`3
  href: FlowRight.Validation.Validators.PropertyValidator-3.html
  name: PropertyValidator<T, TProp, TRule>
  nameWithType: PropertyValidator<T, TProp, TRule>
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule)
  name.vb: PropertyValidator(Of T, TProp, TRule)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3
    name: PropertyValidator
    href: FlowRight.Validation.Validators.PropertyValidator-3.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProp
  - name: ','
  - name: " "
  - name: TRule
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3
    name: PropertyValidator
    href: FlowRight.Validation.Validators.PropertyValidator-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProp
  - name: ','
  - name: " "
  - name: TRule
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.Build(System.Func{`0})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.Build(System.Func{`0})
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Build_System_Func__0__
  name: Build(Func<T>)
  nameWithType: PropertyValidator<T, TProp, TRule>.Build(Func<T>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.Build(System.Func<T>)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).Build(Func(Of T))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).Build(System.Func(Of T))
  name.vb: Build(Func(Of T))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Build(System.Func{`0})
    name: Build
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Build_System_Func__0__
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Build(System.Func{`0})
    name: Build
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Build_System_Func__0__
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.Empty
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.Empty
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Empty
  name: Empty()
  nameWithType: PropertyValidator<T, TProp, TRule>.Empty()
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.Empty()
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).Empty()
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).Empty()
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Empty
    name: Empty
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Empty
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Empty
    name: Empty
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Empty
  - name: (
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.Equal(`1,System.Collections.Generic.IEqualityComparer{`1})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.Equal(`1,System.Collections.Generic.IEqualityComparer{`1})
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Equal__1_System_Collections_Generic_IEqualityComparer__1__
  name: Equal(TProp, IEqualityComparer<TProp>)
  nameWithType: PropertyValidator<T, TProp, TRule>.Equal(TProp, IEqualityComparer<TProp>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.Equal(TProp, System.Collections.Generic.IEqualityComparer<TProp>)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).Equal(TProp, IEqualityComparer(Of TProp))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).Equal(TProp, System.Collections.Generic.IEqualityComparer(Of TProp))
  name.vb: Equal(TProp, IEqualityComparer(Of TProp))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Equal(`1,System.Collections.Generic.IEqualityComparer{`1})
    name: Equal
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Equal__1_System_Collections_Generic_IEqualityComparer__1__
  - name: (
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: <
  - name: TProp
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Equal(`1,System.Collections.Generic.IEqualityComparer{`1})
    name: Equal
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Equal__1_System_Collections_Generic_IEqualityComparer__1__
  - name: (
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProp
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.Must(System.Func{`1,System.Boolean},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.Must(System.Func{`1,System.Boolean},System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Must_System_Func__1_System_Boolean__System_String_
  name: Must(Func<TProp, bool>, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.Must(Func<TProp, bool>, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.Must(System.Func<TProp, bool>, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).Must(Func(Of TProp, Boolean), String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).Must(System.Func(Of TProp, Boolean), String)
  name.vb: Must(Func(Of TProp, Boolean), String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Must(System.Func{`1,System.Boolean},System.String)
    name: Must
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Must_System_Func__1_System_Boolean__System_String_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Must(System.Func{`1,System.Boolean},System.String)
    name: Must
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Must_System_Func__1_System_Boolean__System_String_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.NotEmpty
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.NotEmpty
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEmpty
  name: NotEmpty()
  nameWithType: PropertyValidator<T, TProp, TRule>.NotEmpty()
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.NotEmpty()
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).NotEmpty()
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).NotEmpty()
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.NotEmpty
    name: NotEmpty
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEmpty
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.NotEmpty
    name: NotEmpty
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEmpty
  - name: (
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.NotEqual(`1,System.Collections.Generic.IEqualityComparer{`1})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.NotEqual(`1,System.Collections.Generic.IEqualityComparer{`1})
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEqual__1_System_Collections_Generic_IEqualityComparer__1__
  name: NotEqual(TProp, IEqualityComparer<TProp>)
  nameWithType: PropertyValidator<T, TProp, TRule>.NotEqual(TProp, IEqualityComparer<TProp>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.NotEqual(TProp, System.Collections.Generic.IEqualityComparer<TProp>)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).NotEqual(TProp, IEqualityComparer(Of TProp))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).NotEqual(TProp, System.Collections.Generic.IEqualityComparer(Of TProp))
  name.vb: NotEqual(TProp, IEqualityComparer(Of TProp))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.NotEqual(`1,System.Collections.Generic.IEqualityComparer{`1})
    name: NotEqual
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEqual__1_System_Collections_Generic_IEqualityComparer__1__
  - name: (
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: <
  - name: TProp
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.NotEqual(`1,System.Collections.Generic.IEqualityComparer{`1})
    name: NotEqual
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotEqual__1_System_Collections_Generic_IEqualityComparer__1__
  - name: (
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProp
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.NotNull
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.NotNull
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotNull
  name: NotNull()
  nameWithType: PropertyValidator<T, TProp, TRule>.NotNull()
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.NotNull()
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).NotNull()
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).NotNull()
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.NotNull
    name: NotNull
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotNull
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.NotNull
    name: NotNull
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_NotNull
  - name: (
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.Null
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.Null
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Null
  name: Null()
  nameWithType: PropertyValidator<T, TProp, TRule>.Null()
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.Null()
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).Null()
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).Null()
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Null
    name: "Null"
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Null
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Null
    name: "Null"
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Null
  - name: (
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FlowRight.Core.Results.Result{``0},``0@)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FlowRight.Core.Results.Result{``0},``0@)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0___0___FlowRight_Core_Results_Result___0____0__
  name: RuleFor<TDifferentProp>(Expression<Func<T, TDifferentProp>>, Result<TDifferentProp>, out TDifferentProp)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor<TDifferentProp>(Expression<Func<T, TDifferentProp>>, Result<TDifferentProp>, out TDifferentProp)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor<TDifferentProp>(System.Linq.Expressions.Expression<System.Func<T, TDifferentProp>>, FlowRight.Core.Results.Result<TDifferentProp>, out TDifferentProp)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Of TDifferentProp)(Expression(Of Func(Of T, TDifferentProp)), Result(Of TDifferentProp), TDifferentProp)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(Of TDifferentProp)(System.Linq.Expressions.Expression(Of System.Func(Of T, TDifferentProp)), FlowRight.Core.Results.Result(Of TDifferentProp), TDifferentProp)
  name.vb: RuleFor(Of TDifferentProp)(Expression(Of Func(Of T, TDifferentProp)), Result(Of TDifferentProp), TDifferentProp)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FlowRight.Core.Results.Result{``0},``0@)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0___0___FlowRight_Core_Results_Result___0____0__
  - name: <
  - name: TDifferentProp
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TDifferentProp
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: FlowRight.Core.Results.Result`1
    name: Result
    href: FlowRight.Core.Results.Result-1.html
  - name: <
  - name: TDifferentProp
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TDifferentProp
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FlowRight.Core.Results.Result{``0},``0@)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0___0___FlowRight_Core_Results_Result___0____0__
  - name: (
  - name: Of
  - name: " "
  - name: TDifferentProp
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TDifferentProp
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: FlowRight.Core.Results.Result`1
    name: Result
    href: FlowRight.Core.Results.Result-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TDifferentProp
  - name: )
  - name: ','
  - name: " "
  - name: TDifferentProp
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_String___System_String_System_String_
  name: RuleFor(Expression<Func<T, string>>, string, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, string>>, string, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, string>>, string, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, String)), String, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, String)), String, String)
  name.vb: RuleFor(Expression(Of Func(Of T, String)), String, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_String___System_String_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_String___System_String_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Guid____System_Nullable_System_Guid__System_String_
  name: RuleFor(Expression<Func<T, Guid?>>, Guid?, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, Guid?>>, Guid?, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, System.Guid?>>, System.Guid?, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Guid?)), Guid?, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Guid?)), System.Guid?, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Guid?)), Guid?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Guid____System_Nullable_System_Guid__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Guid}}},System.Nullable{System.Guid},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Guid____System_Nullable_System_Guid__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int32___System_Int32_System_String_
  name: RuleFor(Expression<Func<T, int>>, int, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, int>>, int, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, int>>, int, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Integer)), Integer, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Integer)), Integer, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Integer)), Integer, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int32___System_Int32_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int32___System_Int32_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int64___System_Int64_System_String_
  name: RuleFor(Expression<Func<T, long>>, long, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, long>>, long, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, long>>, long, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Long)), Long, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Long)), Long, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Long)), Long, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int64___System_Int64_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int64___System_Int64_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}},System.Decimal,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}},System.Decimal,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Decimal___System_Decimal_System_String_
  name: RuleFor(Expression<Func<T, decimal>>, decimal, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, decimal>>, decimal, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, decimal>>, decimal, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Decimal)), Decimal, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Decimal)), Decimal, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Decimal)), Decimal, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}},System.Decimal,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Decimal___System_Decimal_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: decimal
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: decimal
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}},System.Decimal,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Decimal___System_Decimal_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: Decimal
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: Decimal
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Double___System_Double_System_String_
  name: RuleFor(Expression<Func<T, double>>, double, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, double>>, double, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, double>>, double, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Double)), Double, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Double)), Double, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Double)), Double, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Double___System_Double_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Double___System_Double_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Single___System_Single_System_String_
  name: RuleFor(Expression<Func<T, float>>, float, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, float>>, float, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, float>>, float, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Single)), Single, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Single)), Single, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Single)), Single, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Single___System_Single_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}},System.Single,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Single___System_Single_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}},System.Int16,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}},System.Int16,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int16___System_Int16_System_String_
  name: RuleFor(Expression<Func<T, short>>, short, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, short>>, short, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, short>>, short, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Short)), Short, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Short)), Short, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Short)), Short, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}},System.Int16,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int16___System_Int16_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int16
    name: short
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int16
    name: short
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}},System.Int16,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Int16___System_Int16_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int16
    name: Short
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int16
    name: Short
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEnumerable___0__System_String_
  name: RuleFor<TItem>(Expression<Func<T, IEnumerable<TItem>>>, IEnumerable<TItem>, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor<TItem>(Expression<Func<T, IEnumerable<TItem>>>, IEnumerable<TItem>, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor<TItem>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TItem>>>, System.Collections.Generic.IEnumerable<TItem>, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Of TItem)(Expression(Of Func(Of T, IEnumerable(Of TItem))), IEnumerable(Of TItem), String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(Of TItem)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TItem))), System.Collections.Generic.IEnumerable(Of TItem), String)
  name.vb: RuleFor(Of TItem)(Expression(Of Func(Of T, IEnumerable(Of TItem))), IEnumerable(Of TItem), String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEnumerable___0__System_String_
  - name: <
  - name: TItem
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: TItem
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor__1_System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_IEnumerable___0____System_Collections_Generic_IEnumerable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}},System.DateTime,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}},System.DateTime,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_DateTime___System_DateTime_System_String_
  name: RuleFor(Expression<Func<T, DateTime>>, DateTime, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, DateTime>>, DateTime, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, System.DateTime>>, System.DateTime, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Date)), Date, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Date)), Date, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Date)), Date, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}},System.DateTime,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_DateTime___System_DateTime_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}},System.DateTime,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_DateTime___System_DateTime_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_DateTime____System_Nullable_System_DateTime__System_String_
  name: RuleFor(Expression<Func<T, DateTime?>>, DateTime?, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, DateTime?>>, DateTime?, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, System.DateTime?>>, System.DateTime?, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Date?)), Date?, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Date?)), Date?, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Date?)), Date?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_DateTime____System_Nullable_System_DateTime__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: '?'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}},System.Nullable{System.DateTime},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_DateTime____System_Nullable_System_DateTime__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: '?'
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_String_
  name: RuleFor(Expression<Func<T, bool>>, bool, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, bool>>, bool, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, bool>>, bool, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Boolean)), Boolean, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Boolean, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Boolean)), Boolean, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Boolean____System_Nullable_System_Boolean__System_String_
  name: RuleFor(Expression<Func<T, bool?>>, bool?, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, bool?>>, bool?, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, bool?>>, bool?, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Boolean?)), Boolean?, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean?)), Boolean?, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Boolean?)), Boolean?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Boolean____System_Nullable_System_Boolean__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '?'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}},System.Nullable{System.Boolean},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Boolean____System_Nullable_System_Boolean__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: '?'
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Byte}},System.Byte,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Byte}},System.Byte,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Byte___System_Byte_System_String_
  name: RuleFor(Expression<Func<T, byte>>, byte, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, byte>>, byte, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, byte>>, byte, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Byte)), Byte, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Byte)), Byte, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Byte)), Byte, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Byte}},System.Byte,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Byte___System_Byte_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Byte}},System.Byte,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Byte___System_Byte_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.SByte}},System.SByte,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.SByte}},System.SByte,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_SByte___System_SByte_System_String_
  name: RuleFor(Expression<Func<T, sbyte>>, sbyte, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, sbyte>>, sbyte, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, sbyte>>, sbyte, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, SByte)), SByte, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, SByte)), SByte, String)
  name.vb: RuleFor(Expression(Of Func(Of T, SByte)), SByte, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.SByte}},System.SByte,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_SByte___System_SByte_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.SByte
    name: sbyte
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.SByte
    name: sbyte
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.SByte}},System.SByte,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_SByte___System_SByte_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.SByte
    name: SByte
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.SByte
    name: SByte
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt32___System_UInt32_System_String_
  name: RuleFor(Expression<Func<T, uint>>, uint, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, uint>>, uint, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, uint>>, uint, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, UInteger)), UInteger, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, UInteger)), UInteger, String)
  name.vb: RuleFor(Expression(Of Func(Of T, UInteger)), UInteger, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt32___System_UInt32_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt32___System_UInt32_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt64___System_UInt64_System_String_
  name: RuleFor(Expression<Func<T, ulong>>, ulong, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, ulong>>, ulong, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, ulong>>, ulong, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, ULong)), ULong, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, ULong)), ULong, String)
  name.vb: RuleFor(Expression(Of Func(Of T, ULong)), ULong, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt64___System_UInt64_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_UInt64___System_UInt64_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Char}},System.Char,System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Char}},System.Char,System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Char___System_Char_System_String_
  name: RuleFor(Expression<Func<T, char>>, char, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, char>>, char, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, char>>, char, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Char)), Char, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Char)), Char, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Char)), Char, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Char}},System.Char,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Char___System_Char_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Char}},System.Char,System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Char___System_Char_System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Char____System_Nullable_System_Char__System_String_
  name: RuleFor(Expression<Func<T, char?>>, char?, string)
  nameWithType: PropertyValidator<T, TProp, TRule>.RuleFor(Expression<Func<T, char?>>, char?, string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.RuleFor(System.Linq.Expressions.Expression<System.Func<T, char?>>, char?, string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).RuleFor(Expression(Of Func(Of T, Char?)), Char?, String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).RuleFor(System.Linq.Expressions.Expression(Of System.Func(Of T, Char?)), Char?, String)
  name.vb: RuleFor(Expression(Of Func(Of T, Char?)), Char?, String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Char____System_Nullable_System_Char__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
  - name: '?'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.RuleFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Char}}},System.Nullable{System.Char},System.String)
    name: RuleFor
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_RuleFor_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Char____System_Nullable_System_Char__System_String_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
  - name: '?'
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.Unless(System.Func{`1,System.Boolean})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.Unless(System.Func{`1,System.Boolean})
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Unless_System_Func__1_System_Boolean__
  name: Unless(Func<TProp, bool>)
  nameWithType: PropertyValidator<T, TProp, TRule>.Unless(Func<TProp, bool>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.Unless(System.Func<TProp, bool>)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).Unless(Func(Of TProp, Boolean))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).Unless(System.Func(Of TProp, Boolean))
  name.vb: Unless(Func(Of TProp, Boolean))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Unless(System.Func{`1,System.Boolean})
    name: Unless
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Unless_System_Func__1_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.Unless(System.Func{`1,System.Boolean})
    name: Unless
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_Unless_System_Func__1_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.When(System.Func{`1,System.Boolean})
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.When(System.Func{`1,System.Boolean})
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_When_System_Func__1_System_Boolean__
  name: When(Func<TProp, bool>)
  nameWithType: PropertyValidator<T, TProp, TRule>.When(Func<TProp, bool>)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.When(System.Func<TProp, bool>)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).When(Func(Of TProp, Boolean))
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).When(System.Func(Of TProp, Boolean))
  name.vb: When(Func(Of TProp, Boolean))
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.When(System.Func{`1,System.Boolean})
    name: When
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_When_System_Func__1_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: <
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.When(System.Func{`1,System.Boolean})
    name: When
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_When_System_Func__1_System_Boolean__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProp
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
  - name: )
- uid: FlowRight.Validation.Validators.PropertyValidator`3.WithMessage(System.String)
  commentId: M:FlowRight.Validation.Validators.PropertyValidator`3.WithMessage(System.String)
  isExternal: true
  href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_WithMessage_System_String_
  name: WithMessage(string)
  nameWithType: PropertyValidator<T, TProp, TRule>.WithMessage(string)
  fullName: FlowRight.Validation.Validators.PropertyValidator<T, TProp, TRule>.WithMessage(string)
  nameWithType.vb: PropertyValidator(Of T, TProp, TRule).WithMessage(String)
  fullName.vb: FlowRight.Validation.Validators.PropertyValidator(Of T, TProp, TRule).WithMessage(String)
  name.vb: WithMessage(String)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.WithMessage(System.String)
    name: WithMessage
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_WithMessage_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Validators.PropertyValidator`3.WithMessage(System.String)
    name: WithMessage
    href: FlowRight.Validation.Validators.PropertyValidator-3.html#FlowRight_Validation_Validators_PropertyValidator_3_WithMessage_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.EmailAddress*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.EmailAddress
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_EmailAddress
  name: EmailAddress
  nameWithType: StringPropertyValidator<T>.EmailAddress
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.EmailAddress
  nameWithType.vb: StringPropertyValidator(Of T).EmailAddress
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).EmailAddress
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1
  commentId: T:FlowRight.Validation.Validators.StringPropertyValidator`1
  parent: FlowRight.Validation.Validators
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html
  name: StringPropertyValidator<T>
  nameWithType: StringPropertyValidator<T>
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>
  nameWithType.vb: StringPropertyValidator(Of T)
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T)
  name.vb: StringPropertyValidator(Of T)
  spec.csharp:
  - uid: FlowRight.Validation.Validators.StringPropertyValidator`1
    name: StringPropertyValidator
    href: FlowRight.Validation.Validators.StringPropertyValidator-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Validators.StringPropertyValidator`1
    name: StringPropertyValidator
    href: FlowRight.Validation.Validators.StringPropertyValidator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.ExactLength*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.ExactLength
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_ExactLength_System_Int32_
  name: ExactLength
  nameWithType: StringPropertyValidator<T>.ExactLength
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.ExactLength
  nameWithType.vb: StringPropertyValidator(Of T).ExactLength
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).ExactLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Length*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.Length
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_Length_System_Int32_System_Int32_
  name: Length
  nameWithType: StringPropertyValidator<T>.Length
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Length
  nameWithType.vb: StringPropertyValidator(Of T).Length
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Length
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Matches*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.Matches
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_Matches_System_String_System_Text_RegularExpressions_RegexOptions_
  name: Matches
  nameWithType: StringPropertyValidator<T>.Matches
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Matches
  nameWithType.vb: StringPropertyValidator(Of T).Matches
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Matches
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Text.RegularExpressions.RegexOptions
  commentId: T:System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.MaximumLength*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.MaximumLength
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_MaximumLength_System_Int32_
  name: MaximumLength
  nameWithType: StringPropertyValidator<T>.MaximumLength
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.MaximumLength
  nameWithType.vb: StringPropertyValidator(Of T).MaximumLength
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).MaximumLength
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.MinimumLength*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.MinimumLength
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_MinimumLength_System_Int32_
  name: MinimumLength
  nameWithType: StringPropertyValidator<T>.MinimumLength
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.MinimumLength
  nameWithType.vb: StringPropertyValidator(Of T).MinimumLength
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).MinimumLength
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Url*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.Url
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_Url
  name: Url
  nameWithType: StringPropertyValidator<T>.Url
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Url
  nameWithType.vb: StringPropertyValidator(Of T).Url
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Url
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Contains*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.Contains
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_Contains_System_String_System_StringComparison_
  name: Contains
  nameWithType: StringPropertyValidator<T>.Contains
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Contains
  nameWithType.vb: StringPropertyValidator(Of T).Contains
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Contains
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.StartsWith*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.StartsWith
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_StartsWith_System_String_System_StringComparison_
  name: StartsWith
  nameWithType: StringPropertyValidator<T>.StartsWith
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.StartsWith
  nameWithType.vb: StringPropertyValidator(Of T).StartsWith
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).StartsWith
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.EndsWith*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.EndsWith
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_EndsWith_System_String_System_StringComparison_
  name: EndsWith
  nameWithType: StringPropertyValidator<T>.EndsWith
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.EndsWith
  nameWithType.vb: StringPropertyValidator(Of T).EndsWith
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).EndsWith
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.Alpha*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.Alpha
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_Alpha
  name: Alpha
  nameWithType: StringPropertyValidator<T>.Alpha
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.Alpha
  nameWithType.vb: StringPropertyValidator(Of T).Alpha
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).Alpha
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.AlphaNumeric*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.AlphaNumeric
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_AlphaNumeric
  name: AlphaNumeric
  nameWithType: StringPropertyValidator<T>.AlphaNumeric
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.AlphaNumeric
  nameWithType.vb: StringPropertyValidator(Of T).AlphaNumeric
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).AlphaNumeric
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.UpperCase*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.UpperCase
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_UpperCase
  name: UpperCase
  nameWithType: StringPropertyValidator<T>.UpperCase
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.UpperCase
  nameWithType.vb: StringPropertyValidator(Of T).UpperCase
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).UpperCase
- uid: FlowRight.Validation.Validators.StringPropertyValidator`1.LowerCase*
  commentId: Overload:FlowRight.Validation.Validators.StringPropertyValidator`1.LowerCase
  href: FlowRight.Validation.Validators.StringPropertyValidator-1.html#FlowRight_Validation_Validators_StringPropertyValidator_1_LowerCase
  name: LowerCase
  nameWithType: StringPropertyValidator<T>.LowerCase
  fullName: FlowRight.Validation.Validators.StringPropertyValidator<T>.LowerCase
  nameWithType.vb: StringPropertyValidator(Of T).LowerCase
  fullName.vb: FlowRight.Validation.Validators.StringPropertyValidator(Of T).LowerCase
