### YamlMime:ManagedReference
items:
- uid: FlowRight.Validation.Rules.NotEqualRule`1
  commentId: T:FlowRight.Validation.Rules.NotEqualRule`1
  id: NotEqualRule`1
  parent: FlowRight.Validation.Rules
  children:
  - FlowRight.Validation.Rules.NotEqualRule`1.#ctor(`0,System.Collections.Generic.IEqualityComparer{`0})
  - FlowRight.Validation.Rules.NotEqualRule`1.Validate(`0,System.String)
  langs:
  - csharp
  - vb
  name: NotEqualRule<T>
  nameWithType: NotEqualRule<T>
  fullName: FlowRight.Validation.Rules.NotEqualRule<T>
  type: Class
  source:
    id: NotEqualRule
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Rules/NotEqualRule.cs
    startLine: 8
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Rules
  summary: A validation rule that ensures a value is not equal to a specified comparison value.
  example: []
  syntax:
    content: 'public sealed class NotEqualRule<T> : IRule<T>'
    typeParameters:
    - id: T
      description: The type of value to validate.
    content.vb: Public NotInheritable Class NotEqualRule(Of T) Implements IRule(Of T)
  inheritance:
  - System.Object
  implements:
  - FlowRight.Validation.Rules.IRule{{T}}
  nameWithType.vb: NotEqualRule(Of T)
  fullName.vb: FlowRight.Validation.Rules.NotEqualRule(Of T)
  name.vb: NotEqualRule(Of T)
- uid: FlowRight.Validation.Rules.NotEqualRule`1.#ctor(`0,System.Collections.Generic.IEqualityComparer{`0})
  commentId: M:FlowRight.Validation.Rules.NotEqualRule`1.#ctor(`0,System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(`0,System.Collections.Generic.IEqualityComparer{`0})'
  parent: FlowRight.Validation.Rules.NotEqualRule`1
  langs:
  - csharp
  - vb
  name: NotEqualRule(T, IEqualityComparer<T>?)
  nameWithType: NotEqualRule<T>.NotEqualRule(T, IEqualityComparer<T>?)
  fullName: FlowRight.Validation.Rules.NotEqualRule<T>.NotEqualRule(T, System.Collections.Generic.IEqualityComparer<T>?)
  type: Constructor
  source:
    id: .ctor
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Rules/NotEqualRule.cs
    startLine: 8
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Rules
  summary: A validation rule that ensures a value is not equal to a specified comparison value.
  example: []
  syntax:
    content: public NotEqualRule(T comparisonValue, IEqualityComparer<T>? comparer = null)
    parameters:
    - id: comparisonValue
      type: '{T}'
      description: The value to compare against.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: Optional equality comparer to use for comparison.
    content.vb: Public Sub New(comparisonValue As T, comparer As IEqualityComparer(Of T) = Nothing)
  overload: FlowRight.Validation.Rules.NotEqualRule`1.#ctor*
  nameWithType.vb: NotEqualRule(Of T).New(T, IEqualityComparer(Of T))
  fullName.vb: FlowRight.Validation.Rules.NotEqualRule(Of T).New(T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: New(T, IEqualityComparer(Of T))
- uid: FlowRight.Validation.Rules.NotEqualRule`1.Validate(`0,System.String)
  commentId: M:FlowRight.Validation.Rules.NotEqualRule`1.Validate(`0,System.String)
  id: Validate(`0,System.String)
  parent: FlowRight.Validation.Rules.NotEqualRule`1
  langs:
  - csharp
  - vb
  name: Validate(T, string)
  nameWithType: NotEqualRule<T>.Validate(T, string)
  fullName: FlowRight.Validation.Rules.NotEqualRule<T>.Validate(T, string)
  type: Method
  source:
    id: Validate
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Rules/NotEqualRule.cs
    startLine: 25
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Rules
  summary: Validates that the value does not equal the comparison value.
  example: []
  syntax:
    content: public string? Validate(T value, string displayName)
    parameters:
    - id: value
      type: '{T}'
      description: The value to validate.
    - id: displayName
      type: System.String
      description: The display name for the property being validated.
    return:
      type: System.String
      description: An error message if the values are equal; otherwise, null.
    content.vb: Public Function Validate(value As T, displayName As String) As String
  overload: FlowRight.Validation.Rules.NotEqualRule`1.Validate*
  implements:
  - FlowRight.Validation.Rules.IRule{{T}}.Validate({T},System.String)
  nameWithType.vb: NotEqualRule(Of T).Validate(T, String)
  fullName.vb: FlowRight.Validation.Rules.NotEqualRule(Of T).Validate(T, String)
  name.vb: Validate(T, String)
references:
- uid: FlowRight.Validation.Rules
  commentId: N:FlowRight.Validation.Rules
  href: FlowRight.html
  name: FlowRight.Validation.Rules
  nameWithType: FlowRight.Validation.Rules
  fullName: FlowRight.Validation.Rules
  spec.csharp:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Rules
    name: Rules
    href: FlowRight.Validation.Rules.html
  spec.vb:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Rules
    name: Rules
    href: FlowRight.Validation.Rules.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FlowRight.Validation.Rules.IRule{{T}}
  commentId: T:FlowRight.Validation.Rules.IRule{`0}
  parent: FlowRight.Validation.Rules
  definition: FlowRight.Validation.Rules.IRule`1
  href: FlowRight.Validation.Rules.IRule-1.html
  name: IRule<T>
  nameWithType: IRule<T>
  fullName: FlowRight.Validation.Rules.IRule<T>
  nameWithType.vb: IRule(Of T)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of T)
  name.vb: IRule(Of T)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FlowRight.Validation.Rules.IRule`1
  commentId: T:FlowRight.Validation.Rules.IRule`1
  href: FlowRight.Validation.Rules.IRule-1.html
  name: IRule<T>
  nameWithType: IRule<T>
  fullName: FlowRight.Validation.Rules.IRule<T>
  nameWithType.vb: IRule(Of T)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of T)
  name.vb: IRule(Of T)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1
    name: IRule
    href: FlowRight.Validation.Rules.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FlowRight.Validation.Rules.NotEqualRule`1.#ctor*
  commentId: Overload:FlowRight.Validation.Rules.NotEqualRule`1.#ctor
  href: FlowRight.Validation.Rules.NotEqualRule-1.html#FlowRight_Validation_Rules_NotEqualRule_1__ctor__0_System_Collections_Generic_IEqualityComparer__0__
  name: NotEqualRule
  nameWithType: NotEqualRule<T>.NotEqualRule
  fullName: FlowRight.Validation.Rules.NotEqualRule<T>.NotEqualRule
  nameWithType.vb: NotEqualRule(Of T).New
  fullName.vb: FlowRight.Validation.Rules.NotEqualRule(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: FlowRight.Validation.Rules.NotEqualRule`1.Validate*
  commentId: Overload:FlowRight.Validation.Rules.NotEqualRule`1.Validate
  href: FlowRight.Validation.Rules.NotEqualRule-1.html#FlowRight_Validation_Rules_NotEqualRule_1_Validate__0_System_String_
  name: Validate
  nameWithType: NotEqualRule<T>.Validate
  fullName: FlowRight.Validation.Rules.NotEqualRule<T>.Validate
  nameWithType.vb: NotEqualRule(Of T).Validate
  fullName.vb: FlowRight.Validation.Rules.NotEqualRule(Of T).Validate
- uid: FlowRight.Validation.Rules.IRule{{T}}.Validate({T},System.String)
  commentId: M:FlowRight.Validation.Rules.IRule{`0}.Validate(`0,System.String)
  parent: FlowRight.Validation.Rules.IRule{{T}}
  definition: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  name: Validate(T, string)
  nameWithType: IRule<T>.Validate(T, string)
  fullName: FlowRight.Validation.Rules.IRule<T>.Validate(T, string)
  nameWithType.vb: IRule(Of T).Validate(T, String)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of T).Validate(T, String)
  name.vb: Validate(T, String)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule{`0}.Validate(`0,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule{`0}.Validate(`0,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  commentId: M:FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
  isExternal: true
  href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  name: Validate(T, string)
  nameWithType: IRule<T>.Validate(T, string)
  fullName: FlowRight.Validation.Rules.IRule<T>.Validate(T, string)
  nameWithType.vb: IRule(Of T).Validate(T, String)
  fullName.vb: FlowRight.Validation.Rules.IRule(Of T).Validate(T, String)
  name.vb: Validate(T, String)
  spec.csharp:
  - uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Rules.IRule`1.Validate(`0,System.String)
    name: Validate
    href: FlowRight.Validation.Rules.IRule-1.html#FlowRight_Validation_Rules_IRule_1_Validate__0_System_String_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
