### YamlMime:ManagedReference
items:
- uid: FlowRight.Validation.Context.ValidationContext
  commentId: T:FlowRight.Validation.Context.ValidationContext
  id: ValidationContext
  parent: FlowRight.Validation.Context
  children:
  - FlowRight.Validation.Context.ValidationContext.Create
  - FlowRight.Validation.Context.ValidationContext.Create(System.IServiceProvider)
  - FlowRight.Validation.Context.ValidationContext.Create(System.Object)
  - FlowRight.Validation.Context.ValidationContext.Create(System.Object,System.IServiceProvider)
  - FlowRight.Validation.Context.ValidationContext.CreateChildContext(System.Object,System.String)
  - FlowRight.Validation.Context.ValidationContext.CustomData
  - FlowRight.Validation.Context.ValidationContext.GetCurrentPropertyPath
  - FlowRight.Validation.Context.ValidationContext.GetCustomData``1(System.String)
  - FlowRight.Validation.Context.ValidationContext.GetExecutedRules
  - FlowRight.Validation.Context.ValidationContext.GetRootObject``1
  - FlowRight.Validation.Context.ValidationContext.GetService``1
  - FlowRight.Validation.Context.ValidationContext.HasCustomData(System.String)
  - FlowRight.Validation.Context.ValidationContext.Parent
  - FlowRight.Validation.Context.ValidationContext.RecordRuleExecution(System.String,System.String,System.Boolean)
  - FlowRight.Validation.Context.ValidationContext.RemoveCustomData(System.String)
  - FlowRight.Validation.Context.ValidationContext.RootObject
  - FlowRight.Validation.Context.ValidationContext.ServiceProvider
  - FlowRight.Validation.Context.ValidationContext.SetCustomData(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: ValidationContext
  nameWithType: ValidationContext
  fullName: FlowRight.Validation.Context.ValidationContext
  type: Class
  source:
    id: ValidationContext
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 37
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: >-
    Concrete implementation of IValidationContext that provides comprehensive validation context

    for complex validation scenarios with object access, service integration, custom data storage,

    and hierarchical validation support.
  remarks: >-
    <p>

    This implementation provides a complete validation context system that enables:

    <ul><li>Cross-property validation through root object access</li><li>External service integration via dependency injection</li><li>State sharing through custom data storage</li><li>Nested validation with parent-child context relationships</li><li>Rule execution tracking for conditional validation</li><li>Property path tracking for error reporting and debugging</li></ul>

    </p>

    <p>

    The ValidationContext follows an immutable design pattern where child contexts inherit

    from their parents but cannot modify parent state, ensuring validation isolation and predictability.

    </p>
  example:
  - >-
    <pre><code class="lang-csharp">// Create context with services and root object

    IValidationContext context = ValidationContext.Create(user, serviceProvider);

    context.SetCustomData("ValidationMode", "Strict");


    // Use in ValidationBuilder

    Result&lt;User&gt; result = new ValidationBuilder&lt;User&gt;(context)
        .RuleFor(x =&gt; x.Email, request.Email)
            .Must((email, ctx) =&gt; ValidateEmailWithContext(email, ctx), "Invalid email")
        .Build(() =&gt; new User(request.Email));</code></pre>
  syntax:
    content: 'public sealed class ValidationContext : IValidationContext'
    content.vb: Public NotInheritable Class ValidationContext Implements IValidationContext
  inheritance:
  - System.Object
  implements:
  - FlowRight.Validation.Context.IValidationContext
- uid: FlowRight.Validation.Context.ValidationContext.RootObject
  commentId: P:FlowRight.Validation.Context.ValidationContext.RootObject
  id: RootObject
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: RootObject
  nameWithType: ValidationContext.RootObject
  fullName: FlowRight.Validation.Context.ValidationContext.RootObject
  type: Property
  source:
    id: RootObject
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 86
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets the root object being validated, if available.
  remarks: >-
    The root object provides access to the entire object being validated, enabling cross-property

    validation scenarios where one property's validation depends on the values of other properties.
  example: []
  syntax:
    content: public object? RootObject { get; }
    parameters: []
    return:
      type: System.Object
      description: The root object being validated, or null if no root object was provided during context creation.
    content.vb: Public ReadOnly Property RootObject As Object
  overload: FlowRight.Validation.Context.ValidationContext.RootObject*
  implements:
  - FlowRight.Validation.Context.IValidationContext.RootObject
- uid: FlowRight.Validation.Context.ValidationContext.GetRootObject``1
  commentId: M:FlowRight.Validation.Context.ValidationContext.GetRootObject``1
  id: GetRootObject``1
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: GetRootObject<T>()
  nameWithType: ValidationContext.GetRootObject<T>()
  fullName: FlowRight.Validation.Context.ValidationContext.GetRootObject<T>()
  type: Method
  source:
    id: GetRootObject
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 89
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets the root object being validated as the specified type.
  example:
  - >-
    <pre><code class="lang-csharp">User? user = context.GetRootObject&lt;User&gt;();

    if (user != null)

    {
        // Access user properties for validation logic
        return someProperty != user.SomeOtherProperty;
    }</code></pre>
  syntax:
    content: 'public T? GetRootObject<T>() where T : class'
    typeParameters:
    - id: T
      description: The type to cast the root object to.
    return:
      type: '{T}'
      description: The root object cast to type T, or null if the root object is null or not of type T.
    content.vb: Public Function GetRootObject(Of T As Class)() As T
  overload: FlowRight.Validation.Context.ValidationContext.GetRootObject*
  implements:
  - FlowRight.Validation.Context.IValidationContext.GetRootObject``1
  nameWithType.vb: ValidationContext.GetRootObject(Of T)()
  fullName.vb: FlowRight.Validation.Context.ValidationContext.GetRootObject(Of T)()
  name.vb: GetRootObject(Of T)()
- uid: FlowRight.Validation.Context.ValidationContext.ServiceProvider
  commentId: P:FlowRight.Validation.Context.ValidationContext.ServiceProvider
  id: ServiceProvider
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: ServiceProvider
  nameWithType: ValidationContext.ServiceProvider
  fullName: FlowRight.Validation.Context.ValidationContext.ServiceProvider
  type: Property
  source:
    id: ServiceProvider
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 97
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets the service provider for dependency injection, if available.
  remarks: >-
    The service provider enables validation rules to access external dependencies such as

    repositories, web services, or other business services required for validation logic.
  example: []
  syntax:
    content: public IServiceProvider? ServiceProvider { get; }
    parameters: []
    return:
      type: System.IServiceProvider
      description: The service provider instance, or null if no service provider was provided during context creation.
    content.vb: Public ReadOnly Property ServiceProvider As IServiceProvider
  overload: FlowRight.Validation.Context.ValidationContext.ServiceProvider*
  implements:
  - FlowRight.Validation.Context.IValidationContext.ServiceProvider
- uid: FlowRight.Validation.Context.ValidationContext.GetService``1
  commentId: M:FlowRight.Validation.Context.ValidationContext.GetService``1
  id: GetService``1
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: GetService<T>()
  nameWithType: ValidationContext.GetService<T>()
  fullName: FlowRight.Validation.Context.ValidationContext.GetService<T>()
  type: Method
  source:
    id: GetService
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 100
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets a service of the specified type from the service provider.
  example:
  - >-
    <pre><code class="lang-csharp">IEmailValidationService? emailService = context.GetService&lt;IEmailValidationService&gt;();

    if (emailService != null)

    {
        return await emailService.IsValidEmailAsync(email);
    }</code></pre>
  syntax:
    content: 'public T? GetService<T>() where T : class'
    typeParameters:
    - id: T
      description: The type of service to retrieve.
    return:
      type: '{T}'
      description: The service instance if found, or null if the service is not available or no service provider exists.
    content.vb: Public Function GetService(Of T As Class)() As T
  overload: FlowRight.Validation.Context.ValidationContext.GetService*
  implements:
  - FlowRight.Validation.Context.IValidationContext.GetService``1
  nameWithType.vb: ValidationContext.GetService(Of T)()
  fullName.vb: FlowRight.Validation.Context.ValidationContext.GetService(Of T)()
  name.vb: GetService(Of T)()
- uid: FlowRight.Validation.Context.ValidationContext.CustomData
  commentId: P:FlowRight.Validation.Context.ValidationContext.CustomData
  id: CustomData
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: CustomData
  nameWithType: ValidationContext.CustomData
  fullName: FlowRight.Validation.Context.ValidationContext.CustomData
  type: Property
  source:
    id: CustomData
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 108
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets the custom data dictionary for storing validation state.
  remarks: >-
    Custom data provides a mechanism for storing and sharing state between validation rules

    within the same validation session. This is useful for caching expensive calculations

    or sharing computed values across multiple validation rules.
  example: []
  syntax:
    content: public IReadOnlyDictionary<string, object> CustomData { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: A read-only dictionary containing custom data set during validation.
    content.vb: Public ReadOnly Property CustomData As IReadOnlyDictionary(Of String, Object)
  overload: FlowRight.Validation.Context.ValidationContext.CustomData*
  implements:
  - FlowRight.Validation.Context.IValidationContext.CustomData
- uid: FlowRight.Validation.Context.ValidationContext.SetCustomData(System.String,System.Object)
  commentId: M:FlowRight.Validation.Context.ValidationContext.SetCustomData(System.String,System.Object)
  id: SetCustomData(System.String,System.Object)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: SetCustomData(string, object)
  nameWithType: ValidationContext.SetCustomData(string, object)
  fullName: FlowRight.Validation.Context.ValidationContext.SetCustomData(string, object)
  type: Method
  source:
    id: SetCustomData
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 112
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Sets custom data in the validation context.
  remarks: >-
    Custom data is stored for the lifetime of the validation context and can be accessed

    by any validation rule within the same validation session.
  example:
  - >-
    <pre><code class="lang-csharp">context.SetCustomData("DatabaseUser", currentUser);

    context.SetCustomData("MaxAllowedAge", 65);</code></pre>
  syntax:
    content: public void SetCustomData(string key, object value)
    parameters:
    - id: key
      type: System.String
      description: The key to identify the data.
    - id: value
      type: System.Object
      description: The value to store.
    content.vb: Public Sub SetCustomData(key As String, value As Object)
  overload: FlowRight.Validation.Context.ValidationContext.SetCustomData*
  implements:
  - FlowRight.Validation.Context.IValidationContext.SetCustomData(System.String,System.Object)
  nameWithType.vb: ValidationContext.SetCustomData(String, Object)
  fullName.vb: FlowRight.Validation.Context.ValidationContext.SetCustomData(String, Object)
  name.vb: SetCustomData(String, Object)
- uid: FlowRight.Validation.Context.ValidationContext.GetCustomData``1(System.String)
  commentId: M:FlowRight.Validation.Context.ValidationContext.GetCustomData``1(System.String)
  id: GetCustomData``1(System.String)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: GetCustomData<T>(string)
  nameWithType: ValidationContext.GetCustomData<T>(string)
  fullName: FlowRight.Validation.Context.ValidationContext.GetCustomData<T>(string)
  type: Method
  source:
    id: GetCustomData
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 121
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets custom data from the validation context.
  example:
  - >-
    <pre><code class="lang-csharp">int maxAge = context.GetCustomData&lt;int&gt;("MaxAllowedAge");

    User? dbUser = context.GetCustomData&lt;User&gt;("DatabaseUser");</code></pre>
  syntax:
    content: public T? GetCustomData<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: The key identifying the data.
    typeParameters:
    - id: T
      description: The type of data to retrieve.
    return:
      type: '{T}'
      description: The data value cast to type T, or the default value of T if the key is not found or cannot be cast.
    content.vb: Public Function GetCustomData(Of T)(key As String) As T
  overload: FlowRight.Validation.Context.ValidationContext.GetCustomData*
  implements:
  - FlowRight.Validation.Context.IValidationContext.GetCustomData``1(System.String)
  nameWithType.vb: ValidationContext.GetCustomData(Of T)(String)
  fullName.vb: FlowRight.Validation.Context.ValidationContext.GetCustomData(Of T)(String)
  name.vb: GetCustomData(Of T)(String)
- uid: FlowRight.Validation.Context.ValidationContext.HasCustomData(System.String)
  commentId: M:FlowRight.Validation.Context.ValidationContext.HasCustomData(System.String)
  id: HasCustomData(System.String)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: HasCustomData(string)
  nameWithType: ValidationContext.HasCustomData(string)
  fullName: FlowRight.Validation.Context.ValidationContext.HasCustomData(string)
  type: Method
  source:
    id: HasCustomData
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 148
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Determines whether the validation context contains custom data with the specified key.
  example: []
  syntax:
    content: public bool HasCustomData(string key)
    parameters:
    - id: key
      type: System.String
      description: The key to check for.
    return:
      type: System.Boolean
      description: true if the context contains data with the specified key; otherwise, false.
    content.vb: Public Function HasCustomData(key As String) As Boolean
  overload: FlowRight.Validation.Context.ValidationContext.HasCustomData*
  implements:
  - FlowRight.Validation.Context.IValidationContext.HasCustomData(System.String)
  nameWithType.vb: ValidationContext.HasCustomData(String)
  fullName.vb: FlowRight.Validation.Context.ValidationContext.HasCustomData(String)
  name.vb: HasCustomData(String)
- uid: FlowRight.Validation.Context.ValidationContext.RemoveCustomData(System.String)
  commentId: M:FlowRight.Validation.Context.ValidationContext.RemoveCustomData(System.String)
  id: RemoveCustomData(System.String)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: RemoveCustomData(string)
  nameWithType: ValidationContext.RemoveCustomData(string)
  fullName: FlowRight.Validation.Context.ValidationContext.RemoveCustomData(string)
  type: Method
  source:
    id: RemoveCustomData
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 155
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Removes custom data from the validation context.
  example: []
  syntax:
    content: public bool RemoveCustomData(string key)
    parameters:
    - id: key
      type: System.String
      description: The key identifying the data to remove.
    return:
      type: System.Boolean
      description: true if the data was found and removed; otherwise, false.
    content.vb: Public Function RemoveCustomData(key As String) As Boolean
  overload: FlowRight.Validation.Context.ValidationContext.RemoveCustomData*
  implements:
  - FlowRight.Validation.Context.IValidationContext.RemoveCustomData(System.String)
  nameWithType.vb: ValidationContext.RemoveCustomData(String)
  fullName.vb: FlowRight.Validation.Context.ValidationContext.RemoveCustomData(String)
  name.vb: RemoveCustomData(String)
- uid: FlowRight.Validation.Context.ValidationContext.CreateChildContext(System.Object,System.String)
  commentId: M:FlowRight.Validation.Context.ValidationContext.CreateChildContext(System.Object,System.String)
  id: CreateChildContext(System.Object,System.String)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: CreateChildContext(object, string?)
  nameWithType: ValidationContext.CreateChildContext(object, string?)
  fullName: FlowRight.Validation.Context.ValidationContext.CreateChildContext(object, string?)
  type: Method
  source:
    id: CreateChildContext
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 166
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Creates a child validation context for nested object validation.
  remarks: >-
    Child contexts inherit custom data and service providers from their parent context,

    enabling consistent validation behavior across nested object hierarchies.
  example:
  - >-
    <pre><code class="lang-csharp">IValidationContext childContext = parentContext.CreateChildContext(user.Profile, "Profile");

    // Child context has access to parent's custom data and services</code></pre>
  syntax:
    content: public IValidationContext CreateChildContext(object childObject, string? propertyName = null)
    parameters:
    - id: childObject
      type: System.Object
      description: The child object being validated.
    - id: propertyName
      type: System.String
      description: The name of the property containing the child object.
    return:
      type: FlowRight.Validation.Context.IValidationContext
      description: A new validation context that inherits from the current context.
    content.vb: Public Function CreateChildContext(childObject As Object, propertyName As String = Nothing) As IValidationContext
  overload: FlowRight.Validation.Context.ValidationContext.CreateChildContext*
  implements:
  - FlowRight.Validation.Context.IValidationContext.CreateChildContext(System.Object,System.String)
  nameWithType.vb: ValidationContext.CreateChildContext(Object, String)
  fullName.vb: FlowRight.Validation.Context.ValidationContext.CreateChildContext(Object, String)
  name.vb: CreateChildContext(Object, String)
- uid: FlowRight.Validation.Context.ValidationContext.GetCurrentPropertyPath
  commentId: M:FlowRight.Validation.Context.ValidationContext.GetCurrentPropertyPath
  id: GetCurrentPropertyPath
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: GetCurrentPropertyPath()
  nameWithType: ValidationContext.GetCurrentPropertyPath()
  fullName: FlowRight.Validation.Context.ValidationContext.GetCurrentPropertyPath()
  type: Method
  source:
    id: GetCurrentPropertyPath
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 180
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets the current property path being validated.
  remarks: >-
    Property paths use dot notation for nested properties (e.g., "User.Profile.Bio") and

    bracket notation for collection indices (e.g., "User.Roles[0].Name").
  example:
  - <pre><code class="lang-csharp">string path = context.GetCurrentPropertyPath(); // Returns "User.Profile.Bio"</code></pre>
  syntax:
    content: public string GetCurrentPropertyPath()
    return:
      type: System.String
      description: The full property path from the root object to the current property being validated.
    content.vb: Public Function GetCurrentPropertyPath() As String
  overload: FlowRight.Validation.Context.ValidationContext.GetCurrentPropertyPath*
  implements:
  - FlowRight.Validation.Context.IValidationContext.GetCurrentPropertyPath
- uid: FlowRight.Validation.Context.ValidationContext.Parent
  commentId: P:FlowRight.Validation.Context.ValidationContext.Parent
  id: Parent
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ValidationContext.Parent
  fullName: FlowRight.Validation.Context.ValidationContext.Parent
  type: Property
  source:
    id: Parent
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 183
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets the parent validation context, if this is a child context.
  example: []
  syntax:
    content: public IValidationContext? Parent { get; }
    parameters: []
    return:
      type: FlowRight.Validation.Context.IValidationContext
      description: The parent validation context, or null if this is a root context.
    content.vb: Public ReadOnly Property Parent As IValidationContext
  overload: FlowRight.Validation.Context.ValidationContext.Parent*
  implements:
  - FlowRight.Validation.Context.IValidationContext.Parent
- uid: FlowRight.Validation.Context.ValidationContext.GetExecutedRules
  commentId: M:FlowRight.Validation.Context.ValidationContext.GetExecutedRules
  id: GetExecutedRules
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: GetExecutedRules()
  nameWithType: ValidationContext.GetExecutedRules()
  fullName: FlowRight.Validation.Context.ValidationContext.GetExecutedRules()
  type: Method
  source:
    id: GetExecutedRules
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 190
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Gets a read-only list of validation rules that have been executed in this context.
  remarks: >-
    Rule execution tracking enables conditional validation logic where the execution of

    subsequent rules can depend on which previous rules have been executed and their results.
  example:
  - >-
    <pre><code class="lang-csharp">IReadOnlyList&lt;string&gt; executedRules = context.GetExecutedRules();

    bool nameValidated = executedRules.Any(rule =&gt; rule.Contains("Name.NotEmpty"));</code></pre>
  syntax:
    content: public IReadOnlyList<string> GetExecutedRules()
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
      description: A list of rule identifiers representing the validation rules that have been executed.
    content.vb: Public Function GetExecutedRules() As IReadOnlyList(Of String)
  overload: FlowRight.Validation.Context.ValidationContext.GetExecutedRules*
  implements:
  - FlowRight.Validation.Context.IValidationContext.GetExecutedRules
- uid: FlowRight.Validation.Context.ValidationContext.RecordRuleExecution(System.String,System.String,System.Boolean)
  commentId: M:FlowRight.Validation.Context.ValidationContext.RecordRuleExecution(System.String,System.String,System.Boolean)
  id: RecordRuleExecution(System.String,System.String,System.Boolean)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: RecordRuleExecution(string, string, bool)
  nameWithType: ValidationContext.RecordRuleExecution(string, string, bool)
  fullName: FlowRight.Validation.Context.ValidationContext.RecordRuleExecution(string, string, bool)
  type: Method
  source:
    id: RecordRuleExecution
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 194
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Records that a validation rule has been executed.
  remarks: >-
    This method is typically called internally by the validation framework to track

    rule execution for conditional validation scenarios.
  example: []
  syntax:
    content: public void RecordRuleExecution(string ruleIdentifier, string propertyName, bool success)
    parameters:
    - id: ruleIdentifier
      type: System.String
      description: A unique identifier for the validation rule.
    - id: propertyName
      type: System.String
      description: The name of the property being validated.
    - id: success
      type: System.Boolean
      description: Whether the validation rule passed or failed.
    content.vb: Public Sub RecordRuleExecution(ruleIdentifier As String, propertyName As String, success As Boolean)
  overload: FlowRight.Validation.Context.ValidationContext.RecordRuleExecution*
  implements:
  - FlowRight.Validation.Context.IValidationContext.RecordRuleExecution(System.String,System.String,System.Boolean)
  nameWithType.vb: ValidationContext.RecordRuleExecution(String, String, Boolean)
  fullName.vb: FlowRight.Validation.Context.ValidationContext.RecordRuleExecution(String, String, Boolean)
  name.vb: RecordRuleExecution(String, String, Boolean)
- uid: FlowRight.Validation.Context.ValidationContext.Create
  commentId: M:FlowRight.Validation.Context.ValidationContext.Create
  id: Create
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: ValidationContext.Create()
  fullName: FlowRight.Validation.Context.ValidationContext.Create()
  type: Method
  source:
    id: Create
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 219
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Creates a new validation context with default settings.
  example:
  - >-
    <pre><code class="lang-csharp">IValidationContext context = ValidationContext.Create();

    context.SetCustomData("ValidationLevel", "Basic");</code></pre>
  syntax:
    content: public static IValidationContext Create()
    return:
      type: FlowRight.Validation.Context.IValidationContext
      description: A new ValidationContext instance with no root object or service provider.
    content.vb: Public Shared Function Create() As IValidationContext
  overload: FlowRight.Validation.Context.ValidationContext.Create*
- uid: FlowRight.Validation.Context.ValidationContext.Create(System.Object)
  commentId: M:FlowRight.Validation.Context.ValidationContext.Create(System.Object)
  id: Create(System.Object)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: Create(object)
  nameWithType: ValidationContext.Create(object)
  fullName: FlowRight.Validation.Context.ValidationContext.Create(object)
  type: Method
  source:
    id: Create
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 233
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Creates a new validation context with the specified root object.
  example:
  - >-
    <pre><code class="lang-csharp">User user = new UserBuilder().Build();

    IValidationContext context = ValidationContext.Create(user);</code></pre>
  syntax:
    content: public static IValidationContext Create(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
      description: The root object being validated.
    return:
      type: FlowRight.Validation.Context.IValidationContext
      description: A new ValidationContext instance with the specified root object.
    content.vb: Public Shared Function Create(rootObject As Object) As IValidationContext
  overload: FlowRight.Validation.Context.ValidationContext.Create*
  nameWithType.vb: ValidationContext.Create(Object)
  fullName.vb: FlowRight.Validation.Context.ValidationContext.Create(Object)
  name.vb: Create(Object)
- uid: FlowRight.Validation.Context.ValidationContext.Create(System.IServiceProvider)
  commentId: M:FlowRight.Validation.Context.ValidationContext.Create(System.IServiceProvider)
  id: Create(System.IServiceProvider)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: Create(IServiceProvider)
  nameWithType: ValidationContext.Create(IServiceProvider)
  fullName: FlowRight.Validation.Context.ValidationContext.Create(System.IServiceProvider)
  type: Method
  source:
    id: Create
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 246
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Creates a new validation context with the specified service provider.
  example:
  - '<pre><code class="lang-csharp">IValidationContext context = ValidationContext.Create(serviceProvider: myServiceProvider);</code></pre>'
  syntax:
    content: public static IValidationContext Create(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: The service provider for dependency injection.
    return:
      type: FlowRight.Validation.Context.IValidationContext
      description: A new ValidationContext instance with the specified service provider.
    content.vb: Public Shared Function Create(serviceProvider As IServiceProvider) As IValidationContext
  overload: FlowRight.Validation.Context.ValidationContext.Create*
- uid: FlowRight.Validation.Context.ValidationContext.Create(System.Object,System.IServiceProvider)
  commentId: M:FlowRight.Validation.Context.ValidationContext.Create(System.Object,System.IServiceProvider)
  id: Create(System.Object,System.IServiceProvider)
  parent: FlowRight.Validation.Context.ValidationContext
  langs:
  - csharp
  - vb
  name: Create(object?, IServiceProvider?)
  nameWithType: ValidationContext.Create(object?, IServiceProvider?)
  fullName: FlowRight.Validation.Context.ValidationContext.Create(object?, System.IServiceProvider?)
  type: Method
  source:
    id: Create
    path: /home/ringo/source/FlowRight-documentation/src/Validation/Context/ValidationContext.cs
    startLine: 261
  assemblies:
  - FlowRight.Validation
  namespace: FlowRight.Validation.Context
  summary: Creates a new validation context with the specified root object and service provider.
  example:
  - >-
    <pre><code class="lang-csharp">User user = new UserBuilder().Build();

    IValidationContext context = ValidationContext.Create(user, serviceProvider);</code></pre>
  syntax:
    content: public static IValidationContext Create(object? rootObject = null, IServiceProvider? serviceProvider = null)
    parameters:
    - id: rootObject
      type: System.Object
      description: The root object being validated.
    - id: serviceProvider
      type: System.IServiceProvider
      description: The service provider for dependency injection.
    return:
      type: FlowRight.Validation.Context.IValidationContext
      description: A new ValidationContext instance with the specified root object and service provider.
    content.vb: Public Shared Function Create(rootObject As Object = Nothing, serviceProvider As IServiceProvider = Nothing) As IValidationContext
  overload: FlowRight.Validation.Context.ValidationContext.Create*
  nameWithType.vb: ValidationContext.Create(Object, IServiceProvider)
  fullName.vb: FlowRight.Validation.Context.ValidationContext.Create(Object, System.IServiceProvider)
  name.vb: Create(Object, IServiceProvider)
references:
- uid: FlowRight.Validation.Context
  commentId: N:FlowRight.Validation.Context
  href: FlowRight.html
  name: FlowRight.Validation.Context
  nameWithType: FlowRight.Validation.Context
  fullName: FlowRight.Validation.Context
  spec.csharp:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Context
    name: Context
    href: FlowRight.Validation.Context.html
  spec.vb:
  - uid: FlowRight
    name: FlowRight
    href: FlowRight.html
  - name: .
  - uid: FlowRight.Validation
    name: Validation
    href: FlowRight.Validation.html
  - name: .
  - uid: FlowRight.Validation.Context
    name: Context
    href: FlowRight.Validation.Context.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FlowRight.Validation.Context.IValidationContext
  commentId: T:FlowRight.Validation.Context.IValidationContext
  parent: FlowRight.Validation.Context
  href: FlowRight.Validation.Context.IValidationContext.html
  name: IValidationContext
  nameWithType: IValidationContext
  fullName: FlowRight.Validation.Context.IValidationContext
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FlowRight.Validation.Context.ValidationContext.RootObject*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.RootObject
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_RootObject
  name: RootObject
  nameWithType: ValidationContext.RootObject
  fullName: FlowRight.Validation.Context.ValidationContext.RootObject
- uid: FlowRight.Validation.Context.IValidationContext.RootObject
  commentId: P:FlowRight.Validation.Context.IValidationContext.RootObject
  parent: FlowRight.Validation.Context.IValidationContext
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_RootObject
  name: RootObject
  nameWithType: IValidationContext.RootObject
  fullName: FlowRight.Validation.Context.IValidationContext.RootObject
- uid: FlowRight.Validation.Context.ValidationContext.GetRootObject*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.GetRootObject
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_GetRootObject__1
  name: GetRootObject
  nameWithType: ValidationContext.GetRootObject
  fullName: FlowRight.Validation.Context.ValidationContext.GetRootObject
- uid: FlowRight.Validation.Context.IValidationContext.GetRootObject``1
  commentId: M:FlowRight.Validation.Context.IValidationContext.GetRootObject``1
  parent: FlowRight.Validation.Context.IValidationContext
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetRootObject__1
  name: GetRootObject<T>()
  nameWithType: IValidationContext.GetRootObject<T>()
  fullName: FlowRight.Validation.Context.IValidationContext.GetRootObject<T>()
  nameWithType.vb: IValidationContext.GetRootObject(Of T)()
  fullName.vb: FlowRight.Validation.Context.IValidationContext.GetRootObject(Of T)()
  name.vb: GetRootObject(Of T)()
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.GetRootObject``1
    name: GetRootObject
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetRootObject__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.GetRootObject``1
    name: GetRootObject
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetRootObject__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: FlowRight.Validation.Context.ValidationContext.ServiceProvider*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.ServiceProvider
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_ServiceProvider
  name: ServiceProvider
  nameWithType: ValidationContext.ServiceProvider
  fullName: FlowRight.Validation.Context.ValidationContext.ServiceProvider
- uid: FlowRight.Validation.Context.IValidationContext.ServiceProvider
  commentId: P:FlowRight.Validation.Context.IValidationContext.ServiceProvider
  parent: FlowRight.Validation.Context.IValidationContext
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_ServiceProvider
  name: ServiceProvider
  nameWithType: IValidationContext.ServiceProvider
  fullName: FlowRight.Validation.Context.IValidationContext.ServiceProvider
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: FlowRight.Validation.Context.ValidationContext.GetService*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.GetService
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_GetService__1
  name: GetService
  nameWithType: ValidationContext.GetService
  fullName: FlowRight.Validation.Context.ValidationContext.GetService
- uid: FlowRight.Validation.Context.IValidationContext.GetService``1
  commentId: M:FlowRight.Validation.Context.IValidationContext.GetService``1
  parent: FlowRight.Validation.Context.IValidationContext
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetService__1
  name: GetService<T>()
  nameWithType: IValidationContext.GetService<T>()
  fullName: FlowRight.Validation.Context.IValidationContext.GetService<T>()
  nameWithType.vb: IValidationContext.GetService(Of T)()
  fullName.vb: FlowRight.Validation.Context.IValidationContext.GetService(Of T)()
  name.vb: GetService(Of T)()
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.GetService``1
    name: GetService
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetService__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.GetService``1
    name: GetService
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetService__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: FlowRight.Validation.Context.ValidationContext.CustomData*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.CustomData
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_CustomData
  name: CustomData
  nameWithType: ValidationContext.CustomData
  fullName: FlowRight.Validation.Context.ValidationContext.CustomData
- uid: FlowRight.Validation.Context.IValidationContext.CustomData
  commentId: P:FlowRight.Validation.Context.IValidationContext.CustomData
  parent: FlowRight.Validation.Context.IValidationContext
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_CustomData
  name: CustomData
  nameWithType: IValidationContext.CustomData
  fullName: FlowRight.Validation.Context.IValidationContext.CustomData
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<string, object>
  nameWithType: IReadOnlyDictionary<string, object>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, object>
  nameWithType.vb: IReadOnlyDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, Object)
  name.vb: IReadOnlyDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: FlowRight.Validation.Context.ValidationContext.SetCustomData*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.SetCustomData
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_SetCustomData_System_String_System_Object_
  name: SetCustomData
  nameWithType: ValidationContext.SetCustomData
  fullName: FlowRight.Validation.Context.ValidationContext.SetCustomData
- uid: FlowRight.Validation.Context.IValidationContext.SetCustomData(System.String,System.Object)
  commentId: M:FlowRight.Validation.Context.IValidationContext.SetCustomData(System.String,System.Object)
  parent: FlowRight.Validation.Context.IValidationContext
  isExternal: true
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_SetCustomData_System_String_System_Object_
  name: SetCustomData(string, object)
  nameWithType: IValidationContext.SetCustomData(string, object)
  fullName: FlowRight.Validation.Context.IValidationContext.SetCustomData(string, object)
  nameWithType.vb: IValidationContext.SetCustomData(String, Object)
  fullName.vb: FlowRight.Validation.Context.IValidationContext.SetCustomData(String, Object)
  name.vb: SetCustomData(String, Object)
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.SetCustomData(System.String,System.Object)
    name: SetCustomData
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_SetCustomData_System_String_System_Object_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.SetCustomData(System.String,System.Object)
    name: SetCustomData
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_SetCustomData_System_String_System_Object_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: FlowRight.Validation.Context.ValidationContext.GetCustomData*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.GetCustomData
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_GetCustomData__1_System_String_
  name: GetCustomData
  nameWithType: ValidationContext.GetCustomData
  fullName: FlowRight.Validation.Context.ValidationContext.GetCustomData
- uid: FlowRight.Validation.Context.IValidationContext.GetCustomData``1(System.String)
  commentId: M:FlowRight.Validation.Context.IValidationContext.GetCustomData``1(System.String)
  parent: FlowRight.Validation.Context.IValidationContext
  isExternal: true
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetCustomData__1_System_String_
  name: GetCustomData<T>(string)
  nameWithType: IValidationContext.GetCustomData<T>(string)
  fullName: FlowRight.Validation.Context.IValidationContext.GetCustomData<T>(string)
  nameWithType.vb: IValidationContext.GetCustomData(Of T)(String)
  fullName.vb: FlowRight.Validation.Context.IValidationContext.GetCustomData(Of T)(String)
  name.vb: GetCustomData(Of T)(String)
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.GetCustomData``1(System.String)
    name: GetCustomData
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetCustomData__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.GetCustomData``1(System.String)
    name: GetCustomData
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetCustomData__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Context.ValidationContext.HasCustomData*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.HasCustomData
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_HasCustomData_System_String_
  name: HasCustomData
  nameWithType: ValidationContext.HasCustomData
  fullName: FlowRight.Validation.Context.ValidationContext.HasCustomData
- uid: FlowRight.Validation.Context.IValidationContext.HasCustomData(System.String)
  commentId: M:FlowRight.Validation.Context.IValidationContext.HasCustomData(System.String)
  parent: FlowRight.Validation.Context.IValidationContext
  isExternal: true
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_HasCustomData_System_String_
  name: HasCustomData(string)
  nameWithType: IValidationContext.HasCustomData(string)
  fullName: FlowRight.Validation.Context.IValidationContext.HasCustomData(string)
  nameWithType.vb: IValidationContext.HasCustomData(String)
  fullName.vb: FlowRight.Validation.Context.IValidationContext.HasCustomData(String)
  name.vb: HasCustomData(String)
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.HasCustomData(System.String)
    name: HasCustomData
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_HasCustomData_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.HasCustomData(System.String)
    name: HasCustomData
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_HasCustomData_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: FlowRight.Validation.Context.ValidationContext.RemoveCustomData*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.RemoveCustomData
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_RemoveCustomData_System_String_
  name: RemoveCustomData
  nameWithType: ValidationContext.RemoveCustomData
  fullName: FlowRight.Validation.Context.ValidationContext.RemoveCustomData
- uid: FlowRight.Validation.Context.IValidationContext.RemoveCustomData(System.String)
  commentId: M:FlowRight.Validation.Context.IValidationContext.RemoveCustomData(System.String)
  parent: FlowRight.Validation.Context.IValidationContext
  isExternal: true
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_RemoveCustomData_System_String_
  name: RemoveCustomData(string)
  nameWithType: IValidationContext.RemoveCustomData(string)
  fullName: FlowRight.Validation.Context.IValidationContext.RemoveCustomData(string)
  nameWithType.vb: IValidationContext.RemoveCustomData(String)
  fullName.vb: FlowRight.Validation.Context.IValidationContext.RemoveCustomData(String)
  name.vb: RemoveCustomData(String)
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.RemoveCustomData(System.String)
    name: RemoveCustomData
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_RemoveCustomData_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.RemoveCustomData(System.String)
    name: RemoveCustomData
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_RemoveCustomData_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Context.ValidationContext.CreateChildContext*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.CreateChildContext
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_CreateChildContext_System_Object_System_String_
  name: CreateChildContext
  nameWithType: ValidationContext.CreateChildContext
  fullName: FlowRight.Validation.Context.ValidationContext.CreateChildContext
- uid: FlowRight.Validation.Context.IValidationContext.CreateChildContext(System.Object,System.String)
  commentId: M:FlowRight.Validation.Context.IValidationContext.CreateChildContext(System.Object,System.String)
  parent: FlowRight.Validation.Context.IValidationContext
  isExternal: true
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_CreateChildContext_System_Object_System_String_
  name: CreateChildContext(object, string)
  nameWithType: IValidationContext.CreateChildContext(object, string)
  fullName: FlowRight.Validation.Context.IValidationContext.CreateChildContext(object, string)
  nameWithType.vb: IValidationContext.CreateChildContext(Object, String)
  fullName.vb: FlowRight.Validation.Context.IValidationContext.CreateChildContext(Object, String)
  name.vb: CreateChildContext(Object, String)
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.CreateChildContext(System.Object,System.String)
    name: CreateChildContext
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_CreateChildContext_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.CreateChildContext(System.Object,System.String)
    name: CreateChildContext
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_CreateChildContext_System_Object_System_String_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Context.ValidationContext.GetCurrentPropertyPath*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.GetCurrentPropertyPath
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_GetCurrentPropertyPath
  name: GetCurrentPropertyPath
  nameWithType: ValidationContext.GetCurrentPropertyPath
  fullName: FlowRight.Validation.Context.ValidationContext.GetCurrentPropertyPath
- uid: FlowRight.Validation.Context.IValidationContext.GetCurrentPropertyPath
  commentId: M:FlowRight.Validation.Context.IValidationContext.GetCurrentPropertyPath
  parent: FlowRight.Validation.Context.IValidationContext
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetCurrentPropertyPath
  name: GetCurrentPropertyPath()
  nameWithType: IValidationContext.GetCurrentPropertyPath()
  fullName: FlowRight.Validation.Context.IValidationContext.GetCurrentPropertyPath()
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.GetCurrentPropertyPath
    name: GetCurrentPropertyPath
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetCurrentPropertyPath
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.GetCurrentPropertyPath
    name: GetCurrentPropertyPath
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetCurrentPropertyPath
  - name: (
  - name: )
- uid: FlowRight.Validation.Context.ValidationContext.Parent*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.Parent
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_Parent
  name: Parent
  nameWithType: ValidationContext.Parent
  fullName: FlowRight.Validation.Context.ValidationContext.Parent
- uid: FlowRight.Validation.Context.IValidationContext.Parent
  commentId: P:FlowRight.Validation.Context.IValidationContext.Parent
  parent: FlowRight.Validation.Context.IValidationContext
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_Parent
  name: Parent
  nameWithType: IValidationContext.Parent
  fullName: FlowRight.Validation.Context.IValidationContext.Parent
- uid: FlowRight.Validation.Context.ValidationContext.GetExecutedRules*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.GetExecutedRules
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_GetExecutedRules
  name: GetExecutedRules
  nameWithType: ValidationContext.GetExecutedRules
  fullName: FlowRight.Validation.Context.ValidationContext.GetExecutedRules
- uid: FlowRight.Validation.Context.IValidationContext.GetExecutedRules
  commentId: M:FlowRight.Validation.Context.IValidationContext.GetExecutedRules
  parent: FlowRight.Validation.Context.IValidationContext
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetExecutedRules
  name: GetExecutedRules()
  nameWithType: IValidationContext.GetExecutedRules()
  fullName: FlowRight.Validation.Context.IValidationContext.GetExecutedRules()
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.GetExecutedRules
    name: GetExecutedRules
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetExecutedRules
  - name: (
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.GetExecutedRules
    name: GetExecutedRules
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_GetExecutedRules
  - name: (
  - name: )
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<string>
  nameWithType: IReadOnlyList<string>
  fullName: System.Collections.Generic.IReadOnlyList<string>
  nameWithType.vb: IReadOnlyList(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FlowRight.Validation.Context.ValidationContext.RecordRuleExecution*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.RecordRuleExecution
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_RecordRuleExecution_System_String_System_String_System_Boolean_
  name: RecordRuleExecution
  nameWithType: ValidationContext.RecordRuleExecution
  fullName: FlowRight.Validation.Context.ValidationContext.RecordRuleExecution
- uid: FlowRight.Validation.Context.IValidationContext.RecordRuleExecution(System.String,System.String,System.Boolean)
  commentId: M:FlowRight.Validation.Context.IValidationContext.RecordRuleExecution(System.String,System.String,System.Boolean)
  parent: FlowRight.Validation.Context.IValidationContext
  isExternal: true
  href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_RecordRuleExecution_System_String_System_String_System_Boolean_
  name: RecordRuleExecution(string, string, bool)
  nameWithType: IValidationContext.RecordRuleExecution(string, string, bool)
  fullName: FlowRight.Validation.Context.IValidationContext.RecordRuleExecution(string, string, bool)
  nameWithType.vb: IValidationContext.RecordRuleExecution(String, String, Boolean)
  fullName.vb: FlowRight.Validation.Context.IValidationContext.RecordRuleExecution(String, String, Boolean)
  name.vb: RecordRuleExecution(String, String, Boolean)
  spec.csharp:
  - uid: FlowRight.Validation.Context.IValidationContext.RecordRuleExecution(System.String,System.String,System.Boolean)
    name: RecordRuleExecution
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_RecordRuleExecution_System_String_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: FlowRight.Validation.Context.IValidationContext.RecordRuleExecution(System.String,System.String,System.Boolean)
    name: RecordRuleExecution
    href: FlowRight.Validation.Context.IValidationContext.html#FlowRight_Validation_Context_IValidationContext_RecordRuleExecution_System_String_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: FlowRight.Validation.Context.ValidationContext.Create*
  commentId: Overload:FlowRight.Validation.Context.ValidationContext.Create
  href: FlowRight.Validation.Context.ValidationContext.html#FlowRight_Validation_Context_ValidationContext_Create
  name: Create
  nameWithType: ValidationContext.Create
  fullName: FlowRight.Validation.Context.ValidationContext.Create
